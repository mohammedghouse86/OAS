{
  "openapi": "3.0.0",
  "info": {
    "title": "Uber Ads API Combined",
    "version": "1.0.0",
    "description": "Combined OpenAPI from multiple uploaded specs. Server updated to sandbox."
  },
  "servers": [
    {
      "url": "https://sandbox-api.uber.com"
    }
  ],
  "paths": {
    "/v1/ads/ad-accounts": {
      "get": {
        "summary": "Get Ad Accounts",
        "description": "Retrieve a list of ad accounts for the authenticated user. Only active ad accounts are returned.",
        "security": [
          {
            "auth": [
              "ads.ad-accounts.read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ad_accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AdAccount"
                      },
                      "description": "List of ad account objects"
                    }
                  }
                },
                "example": {
                  "ad_accounts": [
                    {
                      "ad_account_id": "acc_12345",
                      "name": "Main Advertising Account",
                      "country_code": "US",
                      "currency_code": "USD",
                      "billing": {
                        "address": {
                          "address_line1": "123 Main Street",
                          "address_line2": "Suite 100",
                          "city": "San Francisco",
                          "state": "CA",
                          "country_code": "US",
                          "postal_code": "94102"
                        },
                        "type": "ACCOUNT_BILLING_MODE_AUTO"
                      }
                    },
                    {
                      "ad_account_id": "acc_67890",
                      "name": "Secondary Account",
                      "country_code": "CA",
                      "currency_code": "CAD",
                      "billing": {
                        "address": {
                          "address_line1": "456 Maple Avenue",
                          "city": "Toronto",
                          "state": "ON",
                          "country_code": "CA",
                          "postal_code": "M5V 3A8"
                        },
                        "type": "ACCOUNT_BILLING_MODE_MANUAL"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/v1/ads/{account_id}/campaigns": {
      "get": {
        "summary": "Get Campaigns",
        "description": "Retrieve a list of campaigns for an account.",
        "security": [
          {
            "auth": [
              "ads.campaigns.read"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "description": "Account identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "required": false,
            "description": "Page token for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_limit",
            "required": false,
            "description": "Number of results to return (Max 1000)",
            "schema": {
              "type": "integer",
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Campaign"
                      },
                      "description": "List of campaign objects"
                    },
                    "next_page_token": {
                      "$ref": "#/components/schemas/PageToken"
                    }
                  }
                },
                "example": {
                  "campaigns": [
                    {
                      "campaign_id": "00117dad-f83f-4a38-9192-a371250ff09e",
                      "name": "Q4 Holiday Sponsored Listings Campaign",
                      "created_at": "2023-12-01T20:27:24Z",
                      "updated_at": "2023-12-01T22:09:13Z",
                      "created_by_email": "advertiser@restaurant.com",
                      "updated_by_email": "manager@restaurant.com",
                      "budget": {
                        "unit": "BUDGET_UNIT_DAILY",
                        "total": {
                          "amount": "50000",
                          "currency": "USD"
                        },
                        "cofunding_sources": [
                          {
                            "funding_percentage": 70
                          }
                        ]
                      },
                      "ad_groups": [
                        {
                          "ad_group_id": "379638e6-5ecf-5b27-af83-68368ee3f597",
                          "name": "Downtown Store Promotion - Ad Group 1",
                          "configured_status": "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
                          "effective_status": "CAMPAIGN_EFFECTIVE_STATUS_ELIGIBLE"
                        }
                      ],
                      "configured_status": "CAMPAIGN_CONFIGURED_STATUS_ACTIVE",
                      "effective_status": "CAMPAIGN_EFFECTIVE_STATUS_ELIGIBLE"
                    },
                    {
                      "campaign_id": "02416290-cf7b-4f17-ab46-f77cb13f5051",
                      "name": "Winter Menu Launch Campaign",
                      "created_at": "2023-12-18T23:47:34Z",
                      "updated_at": "2023-12-18T23:47:34Z",
                      "created_by_email": "marketing@brand.com",
                      "updated_by_email": "manager@brand.com",
                      "budget": {
                        "unit": "BUDGET_UNIT_WEEKLY",
                        "total": {
                          "amount": "25000",
                          "currency": "USD"
                        },
                        "cofunding_sources": [
                          {
                            "funding_percentage": 70
                          }
                        ]
                      },
                      "ad_groups": [
                        {
                          "ad_group_id": "41dd6ced-2465-5e8d-a686-bad20c1de101",
                          "name": "Chicago Area Stores - Ad Group 1",
                          "configured_status": "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
                          "effective_status": "CAMPAIGN_EFFECTIVE_STATUS_ELIGIBLE"
                        }
                      ],
                      "configured_status": "CAMPAIGN_CONFIGURED_STATUS_ACTIVE",
                      "effective_status": "CAMPAIGN_EFFECTIVE_STATUS_ELIGIBLE"
                    }
                  ],
                  "next_page_token": {
                    "value": "eyJsYXN0X2NhbXBhaWduX2lkIjoiMDI0MTYyOTAtY2Y3Yi00ZjE3LWFiNDYtZjc3Y2IxM2Y1MDUxIn0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/v1/ads/{account_id}/campaigns/{campaign_id}/ad-groups": {
      "get": {
        "summary": "Get Ad Groups",
        "description": "Retrieve ad groups for a specific campaign.",
        "security": [
          {
            "auth": [
              "ads.campaigns.read"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "description": "Account identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "campaign_id",
            "required": true,
            "description": "Campaign identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "required": false,
            "description": "Page token for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_limit",
            "required": false,
            "description": "Number of results to return (Max 1000)",
            "schema": {
              "type": "integer",
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ad_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AdGroup"
                      },
                      "description": "List of ad group objects"
                    },
                    "next_page_token": {
                      "$ref": "#/components/schemas/PageToken"
                    }
                  }
                },
                "example": {
                  "ad_groups": [
                    {
                      "ad_group_id": "41dd6ced-2465-5e8d-a686-bad20c1de101",
                      "campaign_id": "02416290-cf7b-4f17-ab46-f77cb13f5051",
                      "name": "National Brands Holiday Campaign - Ad Group 1",
                      "schedule": {
                        "start_time": "2023-12-18T05:00:00Z",
                        "end_time": "2024-01-01T05:00:00Z"
                      },
                      "budget": {
                        "unit": "BUDGET_UNIT_WEEKLY",
                        "total": {
                          "amount": "25000",
                          "currency": "USD"
                        },
                        "cofunding_sources": [
                          {
                            "funding_percentage": 70
                          }
                        ]
                      },
                      "bidding": {
                        "auto": {}
                      },
                      "targeting": {
                        "negation": false,
                        "operator": "AND",
                        "criteria": [
                          {
                            "order_value": {
                              "value": "MEDIUM"
                            }
                          },
                          {
                            "cuisine": {
                              "cuisine": "ITALIAN"
                            }
                          },
                          {
                            "keyword_targeting": {
                              "keywords": [
                                "pizza",
                                "pasta",
                                "italian food"
                              ],
                              "match_type": "MATCH_TYPE_PHRASE"
                            }
                          }
                        ]
                      },
                      "subjects": {
                        "stores": {
                          "store_ids": [
                            "65681a33-d4b2-4e23-b9a2-8e9fd44f0b60"
                          ]
                        }
                      },
                      "configured_status": "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
                      "effective_status": "AD_GROUP_EFFECTIVE_STATUS_ELIGIBLE"
                    },
                    {
                      "ad_group_id": "f1768d22-414e-4dfa-8871-0c0ae345092d",
                      "campaign_id": "03527abc-8d4e-4c19-bc67-f88da25ef203",
                      "name": "Asian Cuisine Targeting Group",
                      "schedule": {
                        "start_time": "2025-08-21T21:00:00Z"
                      },
                      "budget": {
                        "unit": "BUDGET_UNIT_DAILY",
                        "total": {
                          "amount": "30000",
                          "currency": "USD"
                        },
                        "cofunding_sources": [
                          {
                            "funding_percentage": 70
                          }
                        ]
                      },
                      "bidding": {
                        "auto": {}
                      },
                      "targeting": {
                        "negation": false,
                        "operator": "AND",
                        "criteria": [
                          {
                            "cuisine": {
                              "cuisine": "ASIAN"
                            }
                          },
                          {
                            "order_value": {
                              "value": "LARGE"
                            }
                          },
                          {
                            "keyword_targeting": {
                              "keywords": [
                                "sushi",
                                "asian fusion",
                                "takeout"
                              ],
                              "match_type": "MATCH_TYPE_BROAD"
                            }
                          }
                        ]
                      },
                      "subjects": {
                        "stores": {
                          "store_ids": [
                            "9ec56511-e1d6-4361-86b3-0e35f55fe24f"
                          ]
                        }
                      },
                      "configured_status": "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
                      "effective_status": "AD_GROUP_EFFECTIVE_STATUS_ELIGIBLE"
                    }
                  ],
                  "next_page_token": {
                    "value": "eyJsYXN0X2FkX2dyb3VwX2lkIjoiNDFkZDZjZWQtMjQ2NS01ZThkLWE2ODYtYmFkMjBjMWRlMTAxIn0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/v1/ads/{account_id}/products": {
      "get": {
        "summary": "Get Products",
        "description": "Retrieve product information for advertising inventory.\n\n**Note: Product catalog data may be updated every 4 hours.**\n",
        "security": [
          {
            "auth": [
              "ads.products.read"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "description": "Account identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "required": false,
            "description": "Page token for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_limit",
            "required": false,
            "description": "Number of results to return (Max 2000)",
            "schema": {
              "type": "integer",
              "maximum": 2000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      },
                      "description": "List of product objects"
                    },
                    "next_page_token": {
                      "$ref": "#/components/schemas/PageToken"
                    }
                  }
                },
                "example": {
                  "products": [
                    {
                      "gtin": "0123456789012",
                      "product_name": "Classic Margherita Pizza",
                      "brand_owner_name": "Tony's Italian Kitchen",
                      "brand_name": "Tony's",
                      "main_image_url": "https://images.uber.com/products/margherita-pizza-001.jpg",
                      "size": "25 oz"
                    },
                    {
                      "gtin": "0987654321098",
                      "product_name": "Chicago Deep Dish Special",
                      "brand_owner_name": "Windy City Pizza Co",
                      "brand_name": "Windy City",
                      "main_image_url": "https://images.uber.com/products/deep-dish-special-002.jpg",
                      "size": "32 oz"
                    },
                    {
                      "gtin": "0456789123456",
                      "product_name": "Fresh Caesar Salad",
                      "brand_owner_name": "Garden Bistro",
                      "brand_name": "Garden",
                      "main_image_url": "https://images.uber.com/products/caesar-salad-003.jpg",
                      "size": "18 oz"
                    }
                  ],
                  "next_page_token": {
                    "value": "eyJsYXN0X3Byb2R1Y3RfZ3RpbiI6IjA0NTY3ODkxMjM0NTYifQ"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/v1/ads/{account_id}/reporting/report": {
      "post": {
        "summary": "Generate Report",
        "description": "Request an asynchronous report with advertising metrics including performance, keyword, and category data.",
        "security": [
          {
            "auth": [
              "ads.reporting"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "description": "Account identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Report generation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSubmitReportJobRequest"
              },
              "example": {
                "report_type": "AD_PERFORMANCE",
                "time_range": {
                  "start_time": "2025-08-01T00:00:00Z",
                  "end_time": "2025-08-21T00:00:00Z"
                },
                "columns": [
                  "campaign_id",
                  "ad_group_id",
                  "impressions",
                  "clicks",
                  "ad_spend",
                  "sales_7d_on_click_date",
                  "orders_7d_on_click_date",
                  "roas_7d_on_click_date",
                  "cost_per_click"
                ],
                "time_unit": "DAILY",
                "filters": [
                  {
                    "column": "campaign_id",
                    "operator": "EQUAL",
                    "values": [
                      "13529bf9-328e-5cf9-b2a7-b670334c2bd9"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalSubmitReportJobResponse"
                },
                "example": {
                  "report_id": "report_abc123def456"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/v1/ads/{account_id}/reporting/{report_id}": {
      "get": {
        "summary": "Get Report Status",
        "description": "Check the status of a report generation request and retrieve the download URL when ready.\n\nThe download URL expires 5 minutes after the report status becomes `COMPLETED`.\n",
        "security": [
          {
            "auth": [
              "ads.reporting"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "description": "Account identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "report_id",
            "required": true,
            "description": "Report identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalGetReportJobStatusResponse"
                },
                "example": {
                  "status": "COMPLETED",
                  "result": {
                    "success_result": {
                      "report_url": "https://reports.uber.com/download/abc123def456",
                      "file_size": "1048576",
                      "url_expires_at": "2024-02-01T00:00:00Z",
                      "report_schema": [
                        "campaign_id",
                        "impressions",
                        "clicks",
                        "spend"
                      ]
                    },
                    "started_at": "2024-01-01T10:00:00Z",
                    "finished_at": "2024-01-01T10:05:30Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "BadRequest",
                  "message": "Invalid request format or parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Unauthorized",
                  "message": "Authentication credentials are missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "PermissionDenied",
                  "message": "Insufficient permissions to perform this operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "The requested resource was not found or is inaccessible"
                }
              }
            }
          },
          "429": {
            "description": "Rate Limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "RateLimitExceeded",
                  "message": "Request limit exceeded."
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "code": "Internal",
                  "message": "An unexpected server error occurred."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdAccount": {
        "type": "object",
        "properties": {
          "ad_account_id": {
            "type": "string",
            "description": "Unique ad account identifier"
          },
          "name": {
            "type": "string",
            "description": "Ad account name"
          },
          "country_code": {
            "type": "string",
            "description": "Country code of the ad account (ISO 3166-1 alpha-2)"
          },
          "currency_code": {
            "type": "string",
            "description": "Currency code of the ad account (ISO 4217)"
          },
          "billing": {
            "$ref": "#/components/schemas/Billing"
          }
        }
      },
      "Billing": {
        "type": "object",
        "description": "Billing information for the ad account",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "type": {
            "type": "string",
            "description": "Billing type",
            "enum": [
              "ACCOUNT_BILLING_MODE_INVALID",
              "ACCOUNT_BILLING_MODE_MANUAL",
              "ACCOUNT_BILLING_MODE_AUTO",
              "ACCOUNT_BILLING_MODE_UCOMMERCE"
            ]
          }
        }
      },
      "Address": {
        "type": "object",
        "description": "Billing address information",
        "properties": {
          "address_line1": {
            "type": "string",
            "description": "Primary address line"
          },
          "address_line2": {
            "type": "string",
            "description": "Secondary address line (optional, for suite/apartment/etc)"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "country_code": {
            "type": "string",
            "description": "Country code (ISO 3166-1 alpha-2)"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal or ZIP code"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign identifier"
          },
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp (RFC 3339)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp (RFC 3339)"
          },
          "created_by_email": {
            "type": "string",
            "description": "Email of user who created the campaign"
          },
          "updated_by_email": {
            "type": "string",
            "description": "Email of user who last updated the campaign"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "ad_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupSummary"
            },
            "description": "Summary of ad groups in this campaign"
          },
          "configured_status": {
            "type": "string",
            "enum": [
              "CAMPAIGN_CONFIGURED_STATUS_INVALID",
              "CAMPAIGN_CONFIGURED_STATUS_DRAFT",
              "CAMPAIGN_CONFIGURED_STATUS_ACTIVE",
              "CAMPAIGN_CONFIGURED_STATUS_PAUSED"
            ]
          },
          "effective_status": {
            "type": "string",
            "enum": [
              "CAMPAIGN_EFFECTIVE_STATUS_ELIGIBLE",
              "CAMPAIGN_EFFECTIVE_STATUS_NOT_ELIGIBLE"
            ]
          }
        }
      },
      "Budget": {
        "type": "object",
        "description": "Budget configuration for campaigns",
        "properties": {
          "unit": {
            "type": "string",
            "enum": [
              "BUDGET_UNIT_INVALID",
              "BUDGET_UNIT_FIXED",
              "BUDGET_UNIT_DAILY",
              "BUDGET_UNIT_WEEKLY"
            ],
            "description": "Budget time unit"
          },
          "total": {
            "$ref": "#/components/schemas/CurrencyAmount",
            "description": "Total budget amount"
          },
          "cofunding_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CofundingSource"
            },
            "description": "Sources of campaign funding"
          }
        }
      },
      "AdGroupSummary": {
        "type": "object",
        "properties": {
          "ad_group_id": {
            "type": "string",
            "description": "Unique ad group identifier"
          },
          "name": {
            "type": "string",
            "description": "Ad group name"
          },
          "configured_status": {
            "type": "string",
            "enum": [
              "AD_GROUP_CONFIGURED_STATUS_INVALID",
              "AD_GROUP_CONFIGURED_STATUS_PAUSED",
              "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
              "AD_GROUP_CONFIGURED_STATUS_ENDED",
              "AD_GROUP_CONFIGURED_STATUS_ARCHIVED",
              "AD_GROUP_CONFIGURED_STATUS_DELETED",
              "AD_GROUP_CONFIGURED_STATUS_DRAFT"
            ]
          },
          "effective_status": {
            "type": "string",
            "enum": [
              "AD_GROUP_EFFECTIVE_STATUS_ELIGIBLE",
              "AD_GROUP_EFFECTIVE_STATUS_NOT_ELIGIBLE"
            ]
          }
        }
      },
      "CurrencyAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "format": "currency-amount",
            "description": "Amount in E5"
          },
          "currency": {
            "type": "string",
            "format": "currency-code",
            "description": "Currency code (ISO 4217)"
          }
        }
      },
      "CofundingSource": {
        "type": "object",
        "properties": {
          "funding_percentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage of cofunding for this campaign (e.g., 70.0 means 70% of the campaign budget is cofunded)"
          }
        }
      },
      "PageToken": {
        "type": "object",
        "description": "Pagination token for retrieving additional results",
        "properties": {
          "value": {
            "type": "string",
            "description": "Opaque page token for pagination"
          }
        }
      },
      "AdGroup": {
        "type": "object",
        "properties": {
          "ad_group_id": {
            "type": "string",
            "description": "Unique ad group identifier"
          },
          "campaign_id": {
            "type": "string",
            "description": "Parent campaign ID"
          },
          "name": {
            "type": "string",
            "description": "Ad group name"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/TargetingCriteria"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroupAction"
            },
            "description": "Actions configured for this ad group"
          },
          "dayparting_schedule": {
            "$ref": "#/components/schemas/DaypartingSchedule"
          },
          "subjects": {
            "$ref": "#/components/schemas/AdSubjects"
          },
          "configured_status": {
            "type": "string",
            "enum": [
              "AD_GROUP_CONFIGURED_STATUS_INVALID",
              "AD_GROUP_CONFIGURED_STATUS_PAUSED",
              "AD_GROUP_CONFIGURED_STATUS_ACTIVE",
              "AD_GROUP_CONFIGURED_STATUS_ENDED",
              "AD_GROUP_CONFIGURED_STATUS_ARCHIVED",
              "AD_GROUP_CONFIGURED_STATUS_DELETED",
              "AD_GROUP_CONFIGURED_STATUS_DRAFT"
            ]
          },
          "effective_status": {
            "type": "string",
            "enum": [
              "AD_GROUP_EFFECTIVE_STATUS_ELIGIBLE",
              "AD_GROUP_EFFECTIVE_STATUS_NOT_ELIGIBLE"
            ]
          }
        }
      },
      "Schedule": {
        "type": "object",
        "description": "Time-based schedule configuration for ad groups",
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time (RFC 3339)"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time (RFC 3339)"
          }
        }
      },
      "Bidding": {
        "type": "object",
        "description": "Bidding strategy configuration for the ad group",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "auto": {
                "$ref": "#/components/schemas/AutoBidding"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "manual": {
                "$ref": "#/components/schemas/ManualBidding"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "goal_based": {
                "$ref": "#/components/schemas/GoalBasedBidding"
              }
            }
          }
        ]
      },
      "AutoBidding": {
        "type": "object",
        "description": "Automatic bidding strategy"
      },
      "ManualBidding": {
        "type": "object",
        "description": "Manual bidding strategy with fixed bid amount",
        "properties": {
          "bid_amount": {
            "$ref": "#/components/schemas/CurrencyAmount"
          }
        }
      },
      "GoalBasedBidding": {
        "type": "object",
        "description": "Goal-based bidding strategy targeting specific ROAS",
        "properties": {
          "roas_goal": {
            "type": "number",
            "format": "double",
            "description": "Return on ad spend goal"
          }
        }
      },
      "TargetingCriteria": {
        "type": "object",
        "description": "Targeting configuration for the ad group",
        "properties": {
          "negation": {
            "type": "boolean",
            "description": "Whether this is a negative targeting criteria"
          },
          "operator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetingCriterion"
            }
          }
        },
        "example": {
          "negation": false,
          "operator": "AND",
          "criteria": [
            {
              "cuisine": {
                "cuisine": "ASIAN"
              }
            },
            {
              "order_value": {
                "value": "MEDIUM"
              }
            },
            {
              "keyword_targeting": {
                "keywords": [
                  "sushi",
                  "noodles"
                ],
                "match_type": "MATCH_TYPE_PHRASE"
              }
            }
          ]
        }
      },
      "TargetingCriterion": {
        "type": "object",
        "description": "Individual targeting criterion",
        "oneOf": [
          {
            "type": "object",
            "description": "Keyword-based targeting configuration",
            "properties": {
              "keyword_targeting": {
                "$ref": "#/components/schemas/KeywordTargetingCriterion"
              }
            },
            "example": {
              "keyword_targeting": {
                "keywords": [
                  "pizza",
                  "delivery"
                ],
                "match_type": "MATCH_TYPE_EXACT"
              }
            }
          },
          {
            "type": "object",
            "description": "Cuisine-based targeting configuration",
            "properties": {
              "cuisine": {
                "$ref": "#/components/schemas/CuisineTargetingCriterion"
              }
            },
            "example": {
              "cuisine": {
                "cuisine": "ITALIAN"
              }
            }
          },
          {
            "type": "object",
            "description": "Order value-based targeting configuration",
            "properties": {
              "order_value": {
                "$ref": "#/components/schemas/OrderValueTargetingCriterion"
              }
            },
            "example": {
              "order_value": {
                "value": "LARGE"
              }
            }
          }
        ]
      },
      "KeywordTargetingCriterion": {
        "type": "object",
        "description": "Keyword-based targeting configuration",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of keywords to target",
            "example": [
              "pizza",
              "delivery",
              "fast food"
            ]
          },
          "match_type": {
            "type": "string",
            "enum": [
              "MATCH_TYPE_INVALID",
              "MATCH_TYPE_EXACT",
              "MATCH_TYPE_PHRASE",
              "MATCH_TYPE_BROAD"
            ],
            "example": "MATCH_TYPE_PHRASE"
          }
        }
      },
      "CuisineTargetingCriterion": {
        "type": "object",
        "description": "Cuisine-based targeting configuration",
        "properties": {
          "cuisine": {
            "type": "string",
            "description": "Cuisine type (e.g., ASIAN_CHINESE, ASIAN_KOREAN)",
            "example": "ASIAN_CHINESE"
          }
        }
      },
      "OrderValueTargetingCriterion": {
        "type": "object",
        "description": "Order value-based targeting configuration",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "ORDER_VALUE_INVALID",
              "SMALL",
              "MEDIUM",
              "LARGE"
            ],
            "example": "MEDIUM"
          }
        }
      },
      "AdGroupAction": {
        "type": "object",
        "description": "Automated actions configured for ad groups",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "auto_resume_action": {
                "$ref": "#/components/schemas/AutoResumeAction"
              }
            }
          }
        ]
      },
      "AutoResumeAction": {
        "type": "object",
        "description": "Automatic resume action configuration",
        "properties": {
          "resume_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date to resume the ad group (RFC 3339 format, e.g., \"2024-01-15T10:00:00Z\")"
          }
        }
      },
      "DaypartingSchedule": {
        "type": "object",
        "description": "Schedule configuration for ad delivery by time of day",
        "properties": {
          "schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DaypartingDaySchedule"
            }
          }
        }
      },
      "DaypartingDaySchedule": {
        "type": "object",
        "description": "Schedule configuration for a specific day",
        "properties": {
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DaypartingInterval"
            }
          }
        }
      },
      "DaypartingInterval": {
        "type": "object",
        "description": "Time interval for ad delivery",
        "properties": {
          "start_time": {
            "$ref": "#/components/schemas/DaypartingTime"
          },
          "end_time": {
            "$ref": "#/components/schemas/DaypartingTime"
          }
        }
      },
      "DaypartingTime": {
        "type": "object",
        "description": "Specific time of day",
        "properties": {
          "hour": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "description": "Hour of the day (0-23)"
          },
          "minute": {
            "type": "integer",
            "minimum": 0,
            "maximum": 59,
            "description": "Minute of the hour (0-59)"
          }
        }
      },
      "AdSubjects": {
        "type": "object",
        "description": "Subject configuration for the ad group",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "stores": {
                "$ref": "#/components/schemas/StoreSubjects"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "gtin_items": {
                "$ref": "#/components/schemas/GTINSubjects"
              }
            }
          }
        ]
      },
      "StoreSubjects": {
        "type": "object",
        "description": "Store-based targeting configuration",
        "properties": {
          "store_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of store IDs"
          }
        }
      },
      "GTINSubjects": {
        "type": "object",
        "description": "Product targeting using Global Trade Item Numbers",
        "properties": {
          "gtin_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GTINItem"
            }
          }
        }
      },
      "GTINItem": {
        "type": "object",
        "description": "Product item with Global Trade Item Number",
        "properties": {
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number"
          },
          "status": {
            "type": "string",
            "enum": [
              "GTIN_ITEM_STATUS_INVALID",
              "GTIN_ITEM_STATUS_ACTIVE",
              "GTIN_ITEM_STATUS_PAUSED"
            ],
            "description": "Status of the GTIN item"
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "Product information for advertising inventory",
        "properties": {
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number"
          },
          "product_name": {
            "type": "string",
            "description": "Official or commonly recognized name of the product as sold to consumers"
          },
          "brand_owner_name": {
            "type": "string",
            "description": "Company or legal entity that owns the rights to the brand and product"
          },
          "brand_name": {
            "type": "string",
            "description": "Marketed or consumer-facing brand under which the product is sold"
          },
          "main_image_url": {
            "type": "string",
            "description": "Primary image that visually represents the product on Uber Eats"
          },
          "size": {
            "type": "string",
            "description": "Measurable quantity expressed in standardized units (e.g., \"500 mL,\" \"12 oz,\" \"10 count\")"
          }
        }
      },
      "ExternalSubmitReportJobRequest": {
        "type": "object",
        "description": "Request configuration for generating an asynchronous report",
        "required": [
          "report_type",
          "time_range",
          "columns",
          "time_unit",
          "file_format"
        ],
        "properties": {
          "report_type": {
            "type": "string",
            "description": "Type of report"
          },
          "time_range": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions and metrics to include in the report"
          },
          "time_unit": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "SUMMARY"
            ],
            "description": "Time unit for aggregation:\n- DAILY: Day-by-day breakdown\n- WEEKLY: Week-by-week aggregation (start date must be Monday)\n- MONTHLY: Month-by-month aggregation (start date must be first of month)\n- SUMMARY: Total aggregation across date range\n\nTime Range Configuration:\n- Weekly Reports: start_time must be Monday, end_time must be next Monday\n- Monthly Reports: start_time must be first of month, end_time must be first of next month\n- Daily/Summary Reports: any valid date range\n\nExamples:\n- Weekly: \"2024-01-01T00:00:00Z\" to \"2024-01-08T00:00:00Z\"\n- Monthly: \"2024-01-01T00:00:00Z\" to \"2024-02-01T00:00:00Z\"\n- Daily: \"2024-01-15T00:00:00Z\" to \"2024-01-20T00:00:00Z\"\n"
          },
          "file_format": {
            "type": "string",
            "description": "Output file format (CSV)"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "description": "Filters to apply to the report"
          }
        }
      },
      "ExternalSubmitReportJobResponse": {
        "type": "object",
        "description": "Response containing the report identifier for tracking",
        "properties": {
          "report_id": {
            "type": "string",
            "description": "Unique report identifier"
          }
        }
      },
      "TimeRange": {
        "type": "object",
        "description": "Time range specification for report data",
        "required": [
          "start_time",
          "end_time"
        ],
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time (RFC 3339)"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time (RFC 3339)"
          }
        }
      },
      "Filter": {
        "type": "object",
        "description": "Filter configuration for report data",
        "required": [
          "column",
          "operator",
          "values"
        ],
        "properties": {
          "column": {
            "type": "string",
            "description": "Column to filter on"
          },
          "operator": {
            "type": "string",
            "description": "Filter operator"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter values"
          }
        }
      },
      "ExternalGetReportJobStatusResponse": {
        "type": "object",
        "description": "Response containing report generation status and results",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "PROCESSING"
            ],
            "description": "Report status"
          },
          "result": {
            "$ref": "#/components/schemas/ReportResult"
          }
        }
      },
      "ReportResult": {
        "description": "Report generation result with timing information and outcome",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "started_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the report started processing (RFC 3339)"
              },
              "finished_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the report finished processing (RFC 3339)"
              }
            }
          },
          {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "success_result": {
                    "$ref": "#/components/schemas/ReportSuccessResult"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "failure_result": {
                    "$ref": "#/components/schemas/ReportFailureResult"
                  }
                }
              }
            ]
          }
        ]
      },
      "ReportSuccessResult": {
        "type": "object",
        "description": "Successful report generation result with download information",
        "properties": {
          "report_url": {
            "type": "string",
            "description": "URL to download the report"
          },
          "file_size": {
            "type": "string",
            "format": "int64",
            "description": "Size of the report file in bytes"
          },
          "url_expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the download URL expires (RFC 3339)"
          },
          "report_schema": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Schema of the report columns"
          }
        }
      },
      "ReportFailureResult": {
        "type": "object",
        "description": "Failed report generation result with error information",
        "properties": {
          "failure_reason": {
            "type": "string",
            "description": "Reason why the report failed"
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.uber.com/oauth/v2/authorize",
            "tokenUrl": "https://login.uber.com/oauth/v2/token",
            "scopes": {
              "ads.ad-accounts.read": "Read access to user's ad accounts",
              "ads.campaigns.read": "Read access to campaign data",
              "ads.products.read": "Read access to product endpoints",
              "ads.reporting": "Access to reporting endpoints"
            }
          }
        }
      }
    }
  }
}