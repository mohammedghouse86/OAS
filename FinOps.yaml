openapi: 3.0.3
info:
  title: Woohoo Enterprise API (auto-generated)
  version: 1.0.0
  description: >-
    Auto-generated OpenAPI surface derived from Express route definitions.
servers:
  - url: https://dev.enterprise.heywoohoo.com/v1
    description: Woohoo Enterprise dev environment
  - url: http://localhost:9001/v1
    description: Local development (defaults to cred().port)
tags:
  - name: "about-us"
    description: "Routes defined in src/routes/about-us.js"
  - name: "activityLog"
    description: "Routes defined in src/routes/activityLog.js"
  - name: "admin"
    description: "Routes defined in src/routes/admin.js"
  - name: "admin-domain"
    description: "Routes defined in src/routes/admin-domain.js"
  - name: "alarm"
    description: "Routes defined in src/routes/alarm.js"
  - name: "alert"
    description: "Routes defined in src/routes/alert.js"
  - name: "amadeus"
    description: "Routes defined in src/routes/amadeus.js"
  - name: "appstore"
    description: "Routes defined in src/routes/appstore.js"
  - name: "audit"
    description: "Routes defined in src/routes/audit.js"
  - name: "code"
    description: "Routes defined in src/routes/code.js"
  - name: "contact"
    description: "Routes defined in src/routes/contact.js"
  - name: "covid"
    description: "Routes defined in src/routes/covid.js"
  - name: "dashboard"
    description: "Routes defined in src/routes/dashboard.js"
  - name: "demo"
    description: "Routes defined in src/routes/demo.js"
  - name: "dialogFlow"
    description: "Routes defined in src/routes/dialogFlow.js"
  - name: "domain"
    description: "Routes defined in src/routes/domain.js"
  - name: "domainRequest"
    description: "Routes defined in src/routes/domainRequest.js"
  - name: "dynamicApps"
    description: "Routes defined in src/routes/dynamicApps.js"
  - name: "email"
    description: "Routes defined in src/routes/email.js"
  - name: "entity"
    description: "Routes defined in src/routes/entity.js"
  - name: "family"
    description: "Routes defined in src/routes/family.js"
  - name: "faq"
    description: "Routes defined in src/routes/faq.js"
  - name: "fcs"
    description: "Routes defined in src/routes/fcs.js"
  - name: "feedback"
    description: "Routes defined in src/routes/feedback.js"
  - name: "fileUpload"
    description: "Routes defined in src/routes/fileUpload.js"
  - name: "fnbUserSession"
    description: "Routes defined in src/routes/fnbUserSession.js"
  - name: "forecast"
    description: "Routes defined in src/routes/forecast.js"
  - name: "group"
    description: "Routes defined in src/routes/group.js"
  - name: "group-user-hub"
    description: "Routes defined in src/routes/group-user-hub.js"
  - name: "honeywell"
    description: "Routes defined in src/routes/honeywell.js"
  - name: "housekeeping"
    description: "Routes defined in src/routes/housekeeping.js"
  - name: "hub"
    description: "Routes defined in src/routes/hub.js"
  - name: "intent"
    description: "Routes defined in src/routes/intent.js"
  - name: "interel"
    description: "Routes defined in src/routes/interel.js"
  - name: "languageService"
    description: "Routes defined in src/routes/languageService.js"
  - name: "liveFeed"
    description: "Routes defined in src/routes/liveFeed.js"
  - name: "locale"
    description: "Routes defined in src/routes/locale.js"
  - name: "melsuite"
    description: "Routes defined in src/routes/melsuite.js"
  - name: "news"
    description: "Routes defined in src/routes/news.js"
  - name: "orders"
    description: "Routes defined in src/routes/orders.js"
  - name: "outlet-tables"
    description: "Routes defined in src/routes/outlet-tables.js"
  - name: "outlook"
    description: "Routes defined in src/routes/outlook.js"
  - name: "ping"
    description: "Routes defined in src/routes/ping.js"
  - name: "pms"
    description: "Routes defined in src/routes/pms.js"
  - name: "pmsWebhookRoute"
    description: "Routes defined in src/routes/pmsWebhookRoute.js"
  - name: "pos"
    description: "Routes defined in src/routes/pos.js"
  - name: "products"
    description: "Routes defined in src/routes/products.js"
  - name: "property-contact-details"
    description: "Routes defined in src/routes/property-contact-details.js"
  - name: "property-details"
    description: "Routes defined in src/routes/property-details.js"
  - name: "property-services"
    description: "Routes defined in src/routes/property-services.js"
  - name: "property-webhook"
    description: "Routes defined in src/routes/property-webhook.js"
  - name: "publicService"
    description: "Routes defined in src/routes/publicService.js"
  - name: "quickLinks"
    description: "Routes defined in src/routes/quickLinks.js"
  - name: "reminder"
    description: "Routes defined in src/routes/reminder.js"
  - name: "restaurant"
    description: "Routes defined in src/routes/restaurant.js"
  - name: "retail-outlet"
    description: "Routes defined in src/routes/retail-outlet.js"
  - name: "roomAutomationService"
    description: "Routes defined in src/routes/roomAutomationService.js"
  - name: "rooms"
    description: "Routes defined in src/routes/rooms.js"
  - name: "routerAuth"
    description: "Routes defined in src/routes/routerAuth.js"
  - name: "service"
    description: "Routes defined in src/routes/service.js"
  - name: "sip-configure"
    description: "Routes defined in src/routes/sip-configure.js"
  - name: "smartFlowRoute"
    description: "Routes defined in src/routes/smartFlowRoute.js"
  - name: "smartHomeDevice"
    description: "Routes defined in src/routes/smartHomeDevice.js"
  - name: "spendsphere"
    description: "Routes defined in src/routes/spendsphere.js"
  - name: "spendsphere-admin"
    description: "Routes defined in src/routes/spendsphere-admin.js"
  - name: "spotify"
    description: "Routes defined in src/routes/spotify.js"
  - name: "super-admin-hub"
    description: "Routes defined in src/routes/super-admin-hub.js"
  - name: "surveillance"
    description: "Routes defined in src/routes/surveillance.js"
  - name: "systemUpdate"
    description: "Routes defined in src/routes/systemUpdate.js"
  - name: "tablecheck"
    description: "Routes defined in src/routes/tablecheck.js"
  - name: "telecom"
    description: "Routes defined in src/routes/telecom.js"
  - name: "temp"
    description: "Routes defined in src/routes/temp.js"
  - name: "thingsToSay"
    description: "Routes defined in src/routes/thingsToSay.js"
  - name: "todo"
    description: "Routes defined in src/routes/todo.js"
  - name: "topApps"
    description: "Routes defined in src/routes/topApps.js"
  - name: "tourism"
    description: "Routes defined in src/routes/tourism.js"
  - name: "tv-control"
    description: "Routes defined in src/routes/tv-control.js"
  - name: "user"
    description: "Routes defined in src/routes/user.js"
  - name: "userType"
    description: "Routes defined in src/routes/userType.js"
  - name: "version"
    description: "Routes defined in src/routes/version.js"
  - name: "weather"
    description: "Routes defined in src/routes/weather.js"
  - name: "wolfram"
    description: "Routes defined in src/routes/wolfram.js"
  - name: "youtube"
    description: "Routes defined in src/routes/youtube.js"
  - name: "zoom"
    description: "Routes defined in src/routes/zoom.js"
paths:
  "/v1/aboutUs/allItems":
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/allItems"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/allItems'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/allItems"
  "/v1/aboutUs/categories":
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/categories"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/categories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/categories"
  "/v1/aboutUs/category":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/category"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/category'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/category"
  "/v1/aboutUs/category/{id}":
    delete:
      tags:
        - "about-us"
      summary: "DELETE /v1/aboutUs/category/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/category/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/category/:id"
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/category/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/category/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/category/:id"
    put:
      tags:
        - "about-us"
      summary: "PUT /v1/aboutUs/category/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/category/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/category/:id"
  "/v1/aboutUs/item":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/item"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/item'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/item"
  "/v1/aboutUs/item/{id}":
    delete:
      tags:
        - "about-us"
      summary: "DELETE /v1/aboutUs/item/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/item/:id"
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/item/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/item/:id"
    put:
      tags:
        - "about-us"
      summary: "PUT /v1/aboutUs/item/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/item/:id"
  "/v1/aboutUs/items":
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/items"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/items'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/items"
  "/v1/aboutUs/subCategories/{id}":
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/subCategories/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/subCategories/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/subCategories/:id"
  "/v1/aboutUs/subCategory":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/subCategory"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/subCategory'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/subCategory"
  "/v1/aboutUs/subCategory/{id}":
    delete:
      tags:
        - "about-us"
      summary: "DELETE /v1/aboutUs/subCategory/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/subCategory/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/subCategory/:id"
    get:
      tags:
        - "about-us"
      summary: "GET /v1/aboutUs/subCategory/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/subCategory/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/subCategory/:id"
    put:
      tags:
        - "about-us"
      summary: "PUT /v1/aboutUs/subCategory/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/subCategory/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/subCategory/:id"
  "/v1/aboutUs/upload/category/{id}":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/upload/category/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/upload/category/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/upload/category/:id"
  "/v1/aboutUs/upload/item/{id}":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/upload/item/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/upload/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/upload/item/:id"
  "/v1/aboutUs/upload/subCategory/{id}":
    post:
      tags:
        - "about-us"
      summary: "POST /v1/aboutUs/upload/subCategory/:id"
      description: "Auto-generated from src/routes/about-us.js. Mounted at /v1/aboutUs with sub-path '/upload/subCategory/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/about-us.js"
      x-express-mount: "/v1/aboutUs"
      x-express-sub-path: "/upload/subCategory/:id"
  "/v1/activityLog":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/"
  "/v1/activityLog/all":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/all"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/all"
  "/v1/activityLog/categoryLogs":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/categoryLogs"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/categoryLogs'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/categoryLogs"
  "/v1/activityLog/fnblogs":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/fnblogs"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/fnblogs'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/fnblogs"
  "/v1/activityLog/logs":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/logs"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/logs'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/logs"
  "/v1/activityLog/logsGraph":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/logsGraph"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/logsGraph'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/logsGraph"
  "/v1/activityLog/logsGraphNew":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/logsGraphNew"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/logsGraphNew'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/logsGraphNew"
  "/v1/activityLog/logsList":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/logsList"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/logsList'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/logsList"
  "/v1/activityLog/sessionGraph":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/sessionGraph"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/sessionGraph'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/sessionGraph"
  "/v1/activityLog/sessionGraphNew":
    post:
      tags:
        - "activityLog"
      summary: "POST /v1/activityLog/sessionGraphNew"
      description: "Auto-generated from src/routes/activityLog.js. Mounted at /v1/activityLog with sub-path '/sessionGraphNew'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/activityLog.js"
      x-express-mount: "/v1/activityLog"
      x-express-sub-path: "/sessionGraphNew"
  "/v1/admin":
    delete:
      tags:
        - "admin"
      summary: "DELETE /v1/admin"
      description: "Auto-generated from src/routes/admin.js. Mounted at /v1/admin/ with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin.js"
      x-express-mount: "/v1/admin/"
      x-express-sub-path: "/"
    post:
      tags:
        - "admin"
      summary: "POST /v1/admin"
      description: "Auto-generated from src/routes/admin.js. Mounted at /v1/admin/ with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin.js"
      x-express-mount: "/v1/admin/"
      x-express-sub-path: "/"
    put:
      tags:
        - "admin"
      summary: "PUT /v1/admin"
      description: "Auto-generated from src/routes/admin.js. Mounted at /v1/admin/ with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin.js"
      x-express-mount: "/v1/admin/"
      x-express-sub-path: "/"
  "/v1/admin/all":
    get:
      tags:
        - "admin"
      summary: "GET /v1/admin/all"
      description: "Auto-generated from src/routes/admin.js. Mounted at /v1/admin/ with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin.js"
      x-express-mount: "/v1/admin/"
      x-express-sub-path: "/all"
  "/v1/adminDomain":
    get:
      tags:
        - "admin-domain"
      summary: "GET /v1/adminDomain"
      description: "Auto-generated from src/routes/admin-domain.js. Mounted at /v1/adminDomain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin-domain.js"
      x-express-mount: "/v1/adminDomain"
      x-express-sub-path: "/"
    post:
      tags:
        - "admin-domain"
      summary: "POST /v1/adminDomain"
      description: "Auto-generated from src/routes/admin-domain.js. Mounted at /v1/adminDomain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin-domain.js"
      x-express-mount: "/v1/adminDomain"
      x-express-sub-path: "/"
  "/v1/adminDomain/{id}":
    delete:
      tags:
        - "admin-domain"
      summary: "DELETE /v1/adminDomain/:id"
      description: "Auto-generated from src/routes/admin-domain.js. Mounted at /v1/adminDomain with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin-domain.js"
      x-express-mount: "/v1/adminDomain"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "admin-domain"
      summary: "PUT /v1/adminDomain/:id"
      description: "Auto-generated from src/routes/admin-domain.js. Mounted at /v1/adminDomain with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/admin-domain.js"
      x-express-mount: "/v1/adminDomain"
      x-express-sub-path: "/:id"
  "/v1/alarm":
    get:
      tags:
        - "alarm"
      summary: "GET /v1/alarm"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/"
    post:
      tags:
        - "alarm"
      summary: "POST /v1/alarm"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/"
  "/v1/alarm/all/{hubId}":
    delete:
      tags:
        - "alarm"
      summary: "DELETE /v1/alarm/all/:hubId"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/all/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/all/:hubId"
  "/v1/alarm/{hubId}":
    get:
      tags:
        - "alarm"
      summary: "GET /v1/alarm/:hubId"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/:hubId"
  "/v1/alarm/{hubId}/{id}":
    get:
      tags:
        - "alarm"
      summary: "GET /v1/alarm/:hubId/:id"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/:hubId/:id'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/:hubId/:id"
  "/v1/alarm/{id}":
    delete:
      tags:
        - "alarm"
      summary: "DELETE /v1/alarm/:id"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/:id"
    post:
      tags:
        - "alarm"
      summary: "POST /v1/alarm/:id"
      description: "Auto-generated from src/routes/alarm.js. Mounted at /v1/alarm with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alarm.js"
      x-express-mount: "/v1/alarm"
      x-express-sub-path: "/:id"
  "/v1/alert":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/"
  "/v1/alert/allAlerts":
    get:
      tags:
        - "alert"
      summary: "GET /v1/alert/allAlerts"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/allAlerts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/allAlerts"
  "/v1/alert/allOrders":
    get:
      tags:
        - "alert"
      summary: "GET /v1/alert/allOrders"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/allOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/allOrders"
  "/v1/alert/allOrders/graph":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert/allOrders/graph"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/allOrders/graph'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/allOrders/graph"
  "/v1/alert/allScheduledAlerts":
    get:
      tags:
        - "alert"
      summary: "GET /v1/alert/allScheduledAlerts"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/allScheduledAlerts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/allScheduledAlerts"
  "/v1/alert/domain":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert/domain"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/domain'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/domain"
  "/v1/alert/form":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert/form"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/form'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/form"
  "/v1/alert/group":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert/group"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/group'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/group"
  "/v1/alert/order":
    post:
      tags:
        - "alert"
      summary: "POST /v1/alert/order"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/order'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/order"
  "/v1/alert/topOrders":
    get:
      tags:
        - "alert"
      summary: "GET /v1/alert/topOrders"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/topOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/topOrders"
  "/v1/alert/{id}":
    delete:
      tags:
        - "alert"
      summary: "DELETE /v1/alert/:id"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "alert"
      summary: "PUT /v1/alert/:id"
      description: "Auto-generated from src/routes/alert.js. Mounted at /v1/alert with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/alert.js"
      x-express-mount: "/v1/alert"
      x-express-sub-path: "/:id"
  "/v1/amadeus/createOrder":
    post:
      tags:
        - "amadeus"
      summary: "POST /v1/amadeus/createOrder"
      description: "Auto-generated from src/routes/amadeus.js. Mounted at /v1/amadeus with sub-path '/createOrder'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/amadeus.js"
      x-express-mount: "/v1/amadeus"
      x-express-sub-path: "/createOrder"
  "/v1/amadeus/getOrders/{hubId}":
    get:
      tags:
        - "amadeus"
      summary: "GET /v1/amadeus/getOrders/:hubId"
      description: "Auto-generated from src/routes/amadeus.js. Mounted at /v1/amadeus with sub-path '/getOrders/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/amadeus.js"
      x-express-mount: "/v1/amadeus"
      x-express-sub-path: "/getOrders/:hubId"
  "/v1/amadeus/updateOrder":
    post:
      tags:
        - "amadeus"
      summary: "POST /v1/amadeus/updateOrder"
      description: "Auto-generated from src/routes/amadeus.js. Mounted at /v1/amadeus with sub-path '/updateOrder'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/amadeus.js"
      x-express-mount: "/v1/amadeus"
      x-express-sub-path: "/updateOrder"
  "/v1/appStore/all":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/all"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/all"
  "/v1/appStore/allApps":
    get:
      tags:
        - "appstore"
      summary: "GET /v1/appStore/allApps"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/allApps'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/allApps"
  "/v1/appStore/endSession":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/endSession"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/endSession'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/endSession"
  "/v1/appStore/getSession":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/getSession"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/getSession'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/getSession"
  "/v1/appStore/payload":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/payload"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/payload'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/payload"
  "/v1/appStore/payload/{id}":
    get:
      tags:
        - "appstore"
      summary: "GET /v1/appStore/payload/:id"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/payload/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/payload/:id"
    put:
      tags:
        - "appstore"
      summary: "PUT /v1/appStore/payload/:id"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/payload/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/payload/:id"
  "/v1/appStore/recordSession":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/recordSession"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/recordSession'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/recordSession"
  "/v1/appStore/startSession":
    post:
      tags:
        - "appstore"
      summary: "POST /v1/appStore/startSession"
      description: "Auto-generated from src/routes/appstore.js. Mounted at /v1/appStore with sub-path '/startSession'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/appstore.js"
      x-express-mount: "/v1/appStore"
      x-express-sub-path: "/startSession"
  "/v1/audit/search":
    get:
      tags:
        - "audit"
      summary: "GET /v1/audit/search"
      description: "Auto-generated from src/routes/audit.js. Mounted at /v1/audit with sub-path '/search'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/audit.js"
      x-express-mount: "/v1/audit"
      x-express-sub-path: "/search"
  "/v1/code":
    delete:
      tags:
        - "code"
      summary: "DELETE /v1/code"
      description: "Auto-generated from src/routes/code.js. Mounted at /v1/code with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/code.js"
      x-express-mount: "/v1/code"
      x-express-sub-path: "/"
    get:
      tags:
        - "code"
      summary: "GET /v1/code"
      description: "Auto-generated from src/routes/code.js. Mounted at /v1/code with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/code.js"
      x-express-mount: "/v1/code"
      x-express-sub-path: "/"
    post:
      tags:
        - "code"
      summary: "POST /v1/code"
      description: "Auto-generated from src/routes/code.js. Mounted at /v1/code with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/code.js"
      x-express-mount: "/v1/code"
      x-express-sub-path: "/"
    put:
      tags:
        - "code"
      summary: "PUT /v1/code"
      description: "Auto-generated from src/routes/code.js. Mounted at /v1/code with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/code.js"
      x-express-mount: "/v1/code"
      x-express-sub-path: "/"
  "/v1/code/all/{serviceId}":
    get:
      tags:
        - "code"
      summary: "GET /v1/code/all/:serviceId"
      description: "Auto-generated from src/routes/code.js. Mounted at /v1/code with sub-path '/all/:serviceId'."
      parameters:
        - name: "serviceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/code.js"
      x-express-mount: "/v1/code"
      x-express-sub-path: "/all/:serviceId"
  "/v1/contact":
    delete:
      tags:
        - "contact"
      summary: "DELETE /v1/contact"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/"
    get:
      tags:
        - "contact"
      summary: "GET /v1/contact"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/"
    post:
      tags:
        - "contact"
      summary: "POST /v1/contact"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/"
    put:
      tags:
        - "contact"
      summary: "PUT /v1/contact"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/"
  "/v1/contact/bulkUpdate":
    post:
      tags:
        - "contact"
      summary: "POST /v1/contact/bulkUpdate"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/bulkUpdate'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/bulkUpdate"
  "/v1/contact/dropInAccess/{hubId}":
    get:
      tags:
        - "contact"
      summary: "GET /v1/contact/dropInAccess/:hubId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/dropInAccess/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/dropInAccess/:hubId"
  "/v1/contact/dropInAccess/{hubId}/{contactUserId}":
    delete:
      tags:
        - "contact"
      summary: "DELETE /v1/contact/dropInAccess/:hubId/:contactUserId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/dropInAccess/:hubId/:contactUserId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "contactUserId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/dropInAccess/:hubId/:contactUserId"
  "/v1/contact/hubAccess/{contactId}":
    get:
      tags:
        - "contact"
      summary: "GET /v1/contact/hubAccess/:contactId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/hubAccess/:contactId'."
      parameters:
        - name: "contactId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/hubAccess/:contactId"
    post:
      tags:
        - "contact"
      summary: "POST /v1/contact/hubAccess/:contactId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/hubAccess/:contactId'."
      parameters:
        - name: "contactId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/hubAccess/:contactId"
  "/v1/contact/profilePicture":
    post:
      tags:
        - "contact"
      summary: "POST /v1/contact/profilePicture"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/profilePicture'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/profilePicture"
  "/v1/contact/profilePicture/{contactId}":
    delete:
      tags:
        - "contact"
      summary: "DELETE /v1/contact/profilePicture/:contactId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/profilePicture/:contactId'."
      parameters:
        - name: "contactId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/profilePicture/:contactId"
    put:
      tags:
        - "contact"
      summary: "PUT /v1/contact/profilePicture/:contactId"
      description: "Auto-generated from src/routes/contact.js. Mounted at /v1/contact with sub-path '/profilePicture/:contactId'."
      parameters:
        - name: "contactId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/contact.js"
      x-express-mount: "/v1/contact"
      x-express-sub-path: "/profilePicture/:contactId"
  "/v1/covid":
    get:
      tags:
        - "covid"
      summary: "GET /v1/covid"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/"
    post:
      tags:
        - "covid"
      summary: "POST /v1/covid"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/"
  "/v1/covid/allCovid":
    get:
      tags:
        - "covid"
      summary: "GET /v1/covid/allCovid"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/allCovid'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/allCovid"
  "/v1/covid/form":
    post:
      tags:
        - "covid"
      summary: "POST /v1/covid/form"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/form'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/form"
  "/v1/covid/getQuestions":
    post:
      tags:
        - "covid"
      summary: "POST /v1/covid/getQuestions"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/getQuestions'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/getQuestions"
  "/v1/covid/save":
    post:
      tags:
        - "covid"
      summary: "POST /v1/covid/save"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/save'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/save"
  "/v1/covid/{id}/{questionId}":
    delete:
      tags:
        - "covid"
      summary: "DELETE /v1/covid/:id/:questionId"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/:id/:questionId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "questionId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/:id/:questionId"
    put:
      tags:
        - "covid"
      summary: "PUT /v1/covid/:id/:questionId"
      description: "Auto-generated from src/routes/covid.js. Mounted at /v1/covid with sub-path '/:id/:questionId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "questionId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/covid.js"
      x-express-mount: "/v1/covid"
      x-express-sub-path: "/:id/:questionId"
  "/v1/dashboard/bookingdetails":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/bookingdetails"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/bookingdetails'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/bookingdetails"
  "/v1/dashboard/customerQueries":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/customerQueries"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/customerQueries'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/customerQueries"
  "/v1/dashboard/customerQueriesWise":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/customerQueriesWise"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/customerQueriesWise'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/customerQueriesWise"
  "/v1/dashboard/deviceStatus":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/deviceStatus"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/deviceStatus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/deviceStatus"
  "/v1/dashboard/feedbackStatus":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/feedbackStatus"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/feedbackStatus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/feedbackStatus"
  "/v1/dashboard/fnbOrders":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/fnbOrders"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/fnbOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/fnbOrders"
  "/v1/dashboard/hourlyAmenitiesTrends":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/hourlyAmenitiesTrends"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/hourlyAmenitiesTrends'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/hourlyAmenitiesTrends"
  "/v1/dashboard/hourlyOrdersTrends":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/hourlyOrdersTrends"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/hourlyOrdersTrends'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/hourlyOrdersTrends"
  "/v1/dashboard/info":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/info"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/info'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/info"
  "/v1/dashboard/promotionOrders":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/promotionOrders"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/promotionOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/promotionOrders"
  "/v1/dashboard/revenueStats":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/revenueStats"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/revenueStats'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/revenueStats"
  "/v1/dashboard/spendsphere/groupSpendingHighlights":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/spendsphere/groupSpendingHighlights"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/spendsphere/groupSpendingHighlights'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/spendsphere/groupSpendingHighlights"
  "/v1/dashboard/spendsphere/guestSpendingHighlights":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/spendsphere/guestSpendingHighlights"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/spendsphere/guestSpendingHighlights'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/spendsphere/guestSpendingHighlights"
  "/v1/dashboard/spendsphere/hourlyOrdersTrends":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/spendsphere/hourlyOrdersTrends"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/spendsphere/hourlyOrdersTrends'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/spendsphere/hourlyOrdersTrends"
  "/v1/dashboard/spendsphere/performanceHighlights":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/spendsphere/performanceHighlights"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/spendsphere/performanceHighlights'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/spendsphere/performanceHighlights"
  "/v1/dashboard/timeWiseOrders":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/timeWiseOrders"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/timeWiseOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/timeWiseOrders"
  "/v1/dashboard/topAmenitieOrders":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/topAmenitieOrders"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/topAmenitieOrders'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/topAmenitieOrders"
  "/v1/dashboard/topOrderRevenues":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/topOrderRevenues"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/topOrderRevenues'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/topOrderRevenues"
  "/v1/dashboard/topQueries":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/topQueries"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/topQueries'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/topQueries"
  "/v1/dashboard/totalBookings":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/totalBookings"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/totalBookings'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/totalBookings"
  "/v1/dashboard/tourismClicks":
    get:
      tags:
        - "dashboard"
      summary: "GET /v1/dashboard/tourismClicks"
      description: "Auto-generated from src/routes/dashboard.js. Mounted at /v1/dashboard with sub-path '/tourismClicks'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dashboard.js"
      x-express-mount: "/v1/dashboard"
      x-express-sub-path: "/tourismClicks"
  "/v1/demo":
    post:
      tags:
        - "demo"
      summary: "POST /v1/demo"
      description: "Auto-generated from src/routes/demo.js. Mounted at /v1/demo with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/demo.js"
      x-express-mount: "/v1/demo"
      x-express-sub-path: "/"
  "/v1/dialogFlow":
    post:
      tags:
        - "dialogFlow"
      summary: "POST /v1/dialogFlow"
      description: "Auto-generated from src/routes/dialogFlow.js. Mounted at /v1/dialogFlow with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dialogFlow.js"
      x-express-mount: "/v1/dialogFlow"
      x-express-sub-path: "/"
  "/v1/dialogFlow/new":
    post:
      tags:
        - "dialogFlow"
      summary: "POST /v1/dialogFlow/new"
      description: "Auto-generated from src/routes/dialogFlow.js. Mounted at /v1/dialogFlow with sub-path '/new'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dialogFlow.js"
      x-express-mount: "/v1/dialogFlow"
      x-express-sub-path: "/new"
  "/v1/dialogFlow/new/nlp":
    post:
      tags:
        - "dialogFlow"
      summary: "POST /v1/dialogFlow/new/nlp"
      description: "Auto-generated from src/routes/dialogFlow.js. Mounted at /v1/dialogFlow with sub-path '/new/nlp'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dialogFlow.js"
      x-express-mount: "/v1/dialogFlow"
      x-express-sub-path: "/new/nlp"
  "/v1/dialogFlow/new/nlp/prod":
    post:
      tags:
        - "dialogFlow"
      summary: "POST /v1/dialogFlow/new/nlp/prod"
      description: "Auto-generated from src/routes/dialogFlow.js. Mounted at /v1/dialogFlow with sub-path '/new/nlp/prod'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dialogFlow.js"
      x-express-mount: "/v1/dialogFlow"
      x-express-sub-path: "/new/nlp/prod"
  "/v1/dialogFlow/reset":
    post:
      tags:
        - "dialogFlow"
      summary: "POST /v1/dialogFlow/reset"
      description: "Auto-generated from src/routes/dialogFlow.js. Mounted at /v1/dialogFlow with sub-path '/reset'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dialogFlow.js"
      x-express-mount: "/v1/dialogFlow"
      x-express-sub-path: "/reset"
  "/v1/domain":
    delete:
      tags:
        - "domain"
      summary: "DELETE /v1/domain"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/"
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/"
    post:
      tags:
        - "domain"
      summary: "POST /v1/domain"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/"
    put:
      tags:
        - "domain"
      summary: "PUT /v1/domain"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/"
  "/v1/domain/all":
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain/all"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/all"
  "/v1/domain/all/ids":
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain/all/ids"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/all/ids'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/all/ids"
  "/v1/domain/charts":
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain/charts"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/charts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/charts"
    post:
      tags:
        - "domain"
      summary: "POST /v1/domain/charts"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/charts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/charts"
  "/v1/domain/charts/{id}":
    patch:
      tags:
        - "domain"
      summary: "PATCH /v1/domain/charts/:id"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/charts/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/charts/:id"
  "/v1/domain/faqtrain/faqTrainedStatus":
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain/faqtrain/faqTrainedStatus"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/faqtrain/faqTrainedStatus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/faqtrain/faqTrainedStatus"
    put:
      tags:
        - "domain"
      summary: "PUT /v1/domain/faqtrain/faqTrainedStatus"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/faqtrain/faqTrainedStatus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/faqtrain/faqTrainedStatus"
  "/v1/domain/user/{domainId}":
    get:
      tags:
        - "domain"
      summary: "GET /v1/domain/user/:domainId"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/user/:domainId'."
      parameters:
        - name: "domainId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/user/:domainId"
  "/v1/domain/{domainId}":
    post:
      tags:
        - "domain"
      summary: "POST /v1/domain/:domainId"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/:domainId'."
      parameters:
        - name: "domainId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/:domainId"
  "/v1/domain/{id}":
    put:
      tags:
        - "domain"
      summary: "PUT /v1/domain/:id"
      description: "Auto-generated from src/routes/domain.js. Mounted at /v1/domain with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domain.js"
      x-express-mount: "/v1/domain"
      x-express-sub-path: "/:id"
  "/v1/domainRequest/acceptRequest/{reqId}":
    get:
      tags:
        - "domainRequest"
      summary: "GET /v1/domainRequest/acceptRequest/:reqId"
      description: "Auto-generated from src/routes/domainRequest.js. Mounted at /v1/domainRequest with sub-path '/acceptRequest/:reqId'."
      parameters:
        - name: "reqId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domainRequest.js"
      x-express-mount: "/v1/domainRequest"
      x-express-sub-path: "/acceptRequest/:reqId"
  "/v1/domainRequest/invites":
    get:
      tags:
        - "domainRequest"
      summary: "GET /v1/domainRequest/invites"
      description: "Auto-generated from src/routes/domainRequest.js. Mounted at /v1/domainRequest with sub-path '/invites'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domainRequest.js"
      x-express-mount: "/v1/domainRequest"
      x-express-sub-path: "/invites"
  "/v1/domainRequest/sendRequest":
    post:
      tags:
        - "domainRequest"
      summary: "POST /v1/domainRequest/sendRequest"
      description: "Auto-generated from src/routes/domainRequest.js. Mounted at /v1/domainRequest with sub-path '/sendRequest'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/domainRequest.js"
      x-express-mount: "/v1/domainRequest"
      x-express-sub-path: "/sendRequest"
  "/v1/dynamicApp":
    delete:
      tags:
        - "dynamicApps"
      summary: "DELETE /v1/dynamicApp"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/"
    get:
      tags:
        - "dynamicApps"
      summary: "GET /v1/dynamicApp"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/"
    post:
      tags:
        - "dynamicApps"
      summary: "POST /v1/dynamicApp"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/"
  "/v1/dynamicApp/sequence":
    post:
      tags:
        - "dynamicApps"
      summary: "POST /v1/dynamicApp/sequence"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/sequence'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/sequence"
  "/v1/dynamicApp/{id}":
    get:
      tags:
        - "dynamicApps"
      summary: "GET /v1/dynamicApp/:id"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "dynamicApps"
      summary: "PUT /v1/dynamicApp/:id"
      description: "Auto-generated from src/routes/dynamicApps.js. Mounted at /v1/dynamicApp with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/dynamicApps.js"
      x-express-mount: "/v1/dynamicApp"
      x-express-sub-path: "/:id"
  "/v1/email/send":
    post:
      tags:
        - "email"
      summary: "POST /v1/email/send"
      description: "Auto-generated from src/routes/email.js. Mounted at /v1/email with sub-path '/send'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/email.js"
      x-express-mount: "/v1/email"
      x-express-sub-path: "/send"
  "/v1/entity":
    delete:
      tags:
        - "entity"
      summary: "DELETE /v1/entity"
      description: "Auto-generated from src/routes/entity.js. Mounted at /v1/entity with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/entity.js"
      x-express-mount: "/v1/entity"
      x-express-sub-path: "/"
    get:
      tags:
        - "entity"
      summary: "GET /v1/entity"
      description: "Auto-generated from src/routes/entity.js. Mounted at /v1/entity with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/entity.js"
      x-express-mount: "/v1/entity"
      x-express-sub-path: "/"
    post:
      tags:
        - "entity"
      summary: "POST /v1/entity"
      description: "Auto-generated from src/routes/entity.js. Mounted at /v1/entity with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/entity.js"
      x-express-mount: "/v1/entity"
      x-express-sub-path: "/"
    put:
      tags:
        - "entity"
      summary: "PUT /v1/entity"
      description: "Auto-generated from src/routes/entity.js. Mounted at /v1/entity with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/entity.js"
      x-express-mount: "/v1/entity"
      x-express-sub-path: "/"
  "/v1/entity/all/{serviceId}":
    get:
      tags:
        - "entity"
      summary: "GET /v1/entity/all/:serviceId"
      description: "Auto-generated from src/routes/entity.js. Mounted at /v1/entity with sub-path '/all/:serviceId'."
      parameters:
        - name: "serviceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/entity.js"
      x-express-mount: "/v1/entity"
      x-express-sub-path: "/all/:serviceId"
  "/v1/family":
    delete:
      tags:
        - "family"
      summary: "DELETE /v1/family"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/"
    get:
      tags:
        - "family"
      summary: "GET /v1/family"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/"
    post:
      tags:
        - "family"
      summary: "POST /v1/family"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/"
    put:
      tags:
        - "family"
      summary: "PUT /v1/family"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/"
  "/v1/family/myFamilies":
    get:
      tags:
        - "family"
      summary: "GET /v1/family/myFamilies"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/myFamilies'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/myFamilies"
  "/v1/family/otherFamilies":
    get:
      tags:
        - "family"
      summary: "GET /v1/family/otherFamilies"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/otherFamilies'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/otherFamilies"
  "/v1/family/otherFamilyMember/hubs/{otherFamilyMemberUserId}":
    get:
      tags:
        - "family"
      summary: "GET /v1/family/otherFamilyMember/hubs/:otherFamilyMemberUserId"
      description: "Auto-generated from src/routes/family.js. Mounted at /v1/family with sub-path '/otherFamilyMember/hubs/:otherFamilyMemberUserId'."
      parameters:
        - name: "otherFamilyMemberUserId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/family.js"
      x-express-mount: "/v1/family"
      x-express-sub-path: "/otherFamilyMember/hubs/:otherFamilyMemberUserId"
  "/v1/faq":
    delete:
      tags:
        - "faq"
      summary: "DELETE /v1/faq"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/"
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/"
    put:
      tags:
        - "faq"
      summary: "PUT /v1/faq"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/"
  "/v1/faq/all":
    delete:
      tags:
        - "faq"
      summary: "DELETE /v1/faq/all"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/all"
    get:
      tags:
        - "faq"
      summary: "GET /v1/faq/all"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/all"
  "/v1/faq/array":
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq/array"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/array'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/array"
  "/v1/faq/categories":
    get:
      tags:
        - "faq"
      summary: "GET /v1/faq/categories"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/categories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/categories"
  "/v1/faq/category":
    delete:
      tags:
        - "faq"
      summary: "DELETE /v1/faq/category"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/category'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/category"
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq/category"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/category'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/category"
    put:
      tags:
        - "faq"
      summary: "PUT /v1/faq/category"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/category'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/category"
  "/v1/faq/category/{id}":
    get:
      tags:
        - "faq"
      summary: "GET /v1/faq/category/:id"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/category/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/category/:id"
  "/v1/faq/context":
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq/context"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/context'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/context"
  "/v1/faq/deleteImg/{name}":
    delete:
      tags:
        - "faq"
      summary: "DELETE /v1/faq/deleteImg/:name"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/deleteImg/:name'."
      parameters:
        - name: "name"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/deleteImg/:name"
  "/v1/faq/faqQuery":
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq/faqQuery"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/faqQuery'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/faqQuery"
  "/v1/faq/train":
    get:
      tags:
        - "faq"
      summary: "GET /v1/faq/train"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/train'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/train"
  "/v1/faq/uploadImg":
    post:
      tags:
        - "faq"
      summary: "POST /v1/faq/uploadImg"
      description: "Auto-generated from src/routes/faq.js. Mounted at /v1/faq with sub-path '/uploadImg'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/faq.js"
      x-express-mount: "/v1/faq"
      x-express-sub-path: "/uploadImg"
  "/v1/fcs/createOrder":
    post:
      tags:
        - "fcs"
      summary: "POST /v1/fcs/createOrder"
      description: "Auto-generated from src/routes/fcs.js. Mounted at /v1/fcs with sub-path '/createOrder'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/fcs.js"
      x-express-mount: "/v1/fcs"
      x-express-sub-path: "/createOrder"
  "/v1/feedback":
    get:
      tags:
        - "feedback"
      summary: "GET /v1/feedback"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/"
    post:
      tags:
        - "feedback"
      summary: "POST /v1/feedback"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/"
  "/v1/feedback/allFeedback":
    get:
      tags:
        - "feedback"
      summary: "GET /v1/feedback/allFeedback"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/allFeedback'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/allFeedback"
  "/v1/feedback/feedbackStats":
    get:
      tags:
        - "feedback"
      summary: "GET /v1/feedback/feedbackStats"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/feedbackStats'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/feedbackStats"
  "/v1/feedback/form":
    post:
      tags:
        - "feedback"
      summary: "POST /v1/feedback/form"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/form'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/form"
  "/v1/feedback/getQuestions":
    post:
      tags:
        - "feedback"
      summary: "POST /v1/feedback/getQuestions"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/getQuestions'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/getQuestions"
  "/v1/feedback/save":
    post:
      tags:
        - "feedback"
      summary: "POST /v1/feedback/save"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/save'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/save"
  "/v1/feedback/{id}/{questionId}":
    delete:
      tags:
        - "feedback"
      summary: "DELETE /v1/feedback/:id/:questionId"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/:id/:questionId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "questionId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/:id/:questionId"
    put:
      tags:
        - "feedback"
      summary: "PUT /v1/feedback/:id/:questionId"
      description: "Auto-generated from src/routes/feedback.js. Mounted at /v1/feedback with sub-path '/:id/:questionId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "questionId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/feedback.js"
      x-express-mount: "/v1/feedback"
      x-express-sub-path: "/:id/:questionId"
  "/v1/file/delete/{imgName}":
    delete:
      tags:
        - "fileUpload"
      summary: "DELETE /v1/file/delete/:imgName"
      description: "Auto-generated from src/routes/fileUpload.js. Mounted at /v1/file with sub-path '/delete/:imgName'."
      parameters:
        - name: "imgName"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/fileUpload.js"
      x-express-mount: "/v1/file"
      x-express-sub-path: "/delete/:imgName"
  "/v1/file/upload":
    post:
      tags:
        - "fileUpload"
      summary: "POST /v1/file/upload"
      description: "Auto-generated from src/routes/fileUpload.js. Mounted at /v1/file with sub-path '/upload'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/fileUpload.js"
      x-express-mount: "/v1/file"
      x-express-sub-path: "/upload"
  "/v1/flow":
    get:
      tags:
        - "smartFlowRoute"
      summary: "GET /v1/flow"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/"
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/"
    put:
      tags:
        - "smartFlowRoute"
      summary: "PUT /v1/flow"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/"
  "/v1/flow/asr":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/asr"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/asr'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/asr"
  "/v1/flow/branch":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/branch"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/branch'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/branch"
  "/v1/flow/conversation":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/conversation"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/conversation'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/conversation"
  "/v1/flow/conversation/debug":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/conversation/debug"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/conversation/debug'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/conversation/debug"
  "/v1/flow/conversation/private":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/conversation/private"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/conversation/private'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/conversation/private"
  "/v1/flow/execNode":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/execNode"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/execNode'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/execNode"
  "/v1/flow/firstNodeOfFlow":
    get:
      tags:
        - "smartFlowRoute"
      summary: "GET /v1/flow/firstNodeOfFlow"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/firstNodeOfFlow'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/firstNodeOfFlow"
  "/v1/flow/hubQuery":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/hubQuery"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/hubQuery'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/hubQuery"
  "/v1/flow/node":
    get:
      tags:
        - "smartFlowRoute"
      summary: "GET /v1/flow/node"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/node'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/node"
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/node"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/node'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/node"
    put:
      tags:
        - "smartFlowRoute"
      summary: "PUT /v1/flow/node"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/node'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/node"
  "/v1/flow/node/{id}/{nodeId}":
    delete:
      tags:
        - "smartFlowRoute"
      summary: "DELETE /v1/flow/node/:id/:nodeId"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/node/:id/:nodeId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "nodeId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/node/:id/:nodeId"
  "/v1/flow/node_new":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/node_new"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/node_new'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/node_new"
  "/v1/flow/statsDump":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/statsDump"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/statsDump'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/statsDump"
  "/v1/flow/tts":
    post:
      tags:
        - "smartFlowRoute"
      summary: "POST /v1/flow/tts"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/tts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/tts"
  "/v1/flow/ttsAudio/{id}":
    delete:
      tags:
        - "smartFlowRoute"
      summary: "DELETE /v1/flow/ttsAudio/:id"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/ttsAudio/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/ttsAudio/:id"
    get:
      tags:
        - "smartFlowRoute"
      summary: "GET /v1/flow/ttsAudio/:id"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/ttsAudio/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/ttsAudio/:id"
  "/v1/flow/{id}":
    delete:
      tags:
        - "smartFlowRoute"
      summary: "DELETE /v1/flow/:id"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "smartFlowRoute"
      summary: "GET /v1/flow/:id"
      description: "Auto-generated from src/routes/smartFlowRoute.js. Mounted at /v1/flow with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartFlowRoute.js"
      x-express-mount: "/v1/flow"
      x-express-sub-path: "/:id"
  "/v1/fnb/admins":
    post:
      tags:
        - "products"
      summary: "Configure category notification admins"
      description: "Creates or replaces the notification email list for a category."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbAdminConfigRequest"
      responses:
        "200":
          description: "Admin configuration saved."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/admins"
  "/v1/fnb/admins/{id}":
    put:
      tags:
        - "products"
      summary: "Update category notification admins"
      description: "Updates the notification email list/status for an existing configuration record."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Admin configuration identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbAdminConfigRequest"
      responses:
        "200":
          description: "Admin configuration updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/admins/:id"
  "/v1/fnb/admins/{id}/{catId}":
    get:
      tags:
        - "products"
      summary: "Get category notification admins"
      description: "Returns the email list and enabled status for a category. The first path parameter is the domain identifier (unused in the response but kept for routing compatibility)."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Domain identifier."
          schema:
            type: "integer"
        - name: "catId"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Admin configuration returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          emails:
                            type: array
                            items:
                              type: string
                              format: email
                          status:
                            type: boolean
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/admins/:id/:catId"
  "/v1/fnb/allProducts":
    get:
      tags:
        - "products"
      summary: "List all domain products"
      description: "Returns the full catalog for the authenticated domain, ordered by sequence."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Products returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbProduct"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/allProducts"
  "/v1/fnb/banner":
    get:
      tags:
        - "products"
      summary: "List banners"
      description: "Returns marketing banners configured for the domain/property."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Filter banners for a specific property."
      responses:
        "200":
          description: "Banners returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbBanner"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/banner"
    post:
      tags:
        - "products"
      summary: "Create banner"
      description: "Uploads a new banner asset with styling metadata."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FnbBannerCreateRequest"
      responses:
        "200":
          description: "Banner created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbBanner"
        "422":
          description: "Missing image or required fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/banner"
  "/v1/fnb/banner/{id}":
    delete:
      tags:
        - "products"
      summary: "Delete banner"
      description: "Deletes a banner asset."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Banner identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Banner deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/banner/:id"
    get:
      tags:
        - "products"
      summary: "Get banner"
      description: "Returns banner styling and imagery metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Banner identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Banner returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbBanner"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/banner/:id"
    put:
      tags:
        - "products"
      summary: "Update banner"
      description: "Replaces banner imagery or styling metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Banner identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FnbBannerUpdateRequest"
      responses:
        "200":
          description: "Banner updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbBanner"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/banner/:id"
  "/v1/fnb/categories":
    get:
      tags:
        - "products"
      summary: "List categories"
      description: "Returns all categories for the specified property, including timing metadata and notification configuration."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          required: true
          schema:
            type: "integer"
          description: "Property identifier."
      responses:
        "200":
          description: "Categories returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/categories"
  "/v1/fnb/category":
    post:
      tags:
        - "products"
      summary: "Create category"
      description: "Creates a new category and initial notification preferences."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbCategoryCreateRequest"
      responses:
        "200":
          description: "Category created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbCategory"
        "422":
          description: "Missing required fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/category"
  "/v1/fnb/category/{id}":
    delete:
      tags:
        - "products"
      summary: "Delete category"
      description: "Deletes a category and its associated notification configuration."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Category deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/category/:id"
    get:
      tags:
        - "products"
      summary: "Get category"
      description: "Returns category details, including taxes, timings, and admin emails."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Category returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Category not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/category/:id"
    put:
      tags:
        - "products"
      summary: "Update category"
      description: "Updates category names, taxes, timings, or notification emails."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbCategoryUpdateRequest"
      responses:
        "200":
          description: "Category updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbCategory"
        "422":
          description: "Category not found or invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/category/:id"
  "/v1/fnb/login":
    post:
      tags:
        - "products"
      summary: "Room service login"
      description: "Authenticates an in-room guest by property, room number, and last name, issuing a session token usable for F&B orders."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbLoginRequest"
      responses:
        "200":
          description: "Login successful."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/LoginResponseData"
        "400":
          description: "Validation or guest mismatch error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/login"
  "/v1/fnb/modifier":
    post:
      tags:
        - "products"
      summary: "Add product modifiers"
      description: "Attaches one or more modifier groups (with options) to a product."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbModifierRequest"
      responses:
        "200":
          description: "Modifiers created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbModifier"
        "422":
          description: "Missing productId, propertyId or modifiers."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/modifier"
    put:
      tags:
        - "products"
      summary: "Update product modifiers"
      description: "Creates or updates modifier groups for a product."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbModifierRequest"
      responses:
        "200":
          description: "Modifiers updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbModifier"
        "422":
          description: "Missing productId or modifiers."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/modifier"
  "/v1/fnb/modifier/{id}":
    delete:
      tags:
        - "products"
      summary: "Delete modifier group"
      description: "Deletes a modifier group by identifier."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Modifier identifier."
          schema:
            type: "integer"
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Restrict deletion to modifiers for a specific property."
      responses:
        "200":
          description: "Modifier deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/modifier/:id"
    get:
      tags:
        - "products"
      summary: "Get product modifiers"
      description: "Returns a product with its modifier groups."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Product modifiers returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbProductWithModifiers"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Product not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/modifier/:id"
  "/v1/fnb/product":
    post:
      tags:
        - "products"
      summary: "Create F&B product"
      description: "Creates a menu item for the current domain/property. POS integration metadata is captured when provided."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbProductCreateRequest"
      responses:
        "200":
          description: "Product created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbProductWithModifiers"
        "422":
          description: "Validation failed (for example missing propertyId or categoryId)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/product"
  "/v1/fnb/product/{id}":
    delete:
      tags:
        - "products"
      summary: "Delete product"
      description: "Deletes a menu item and removes associated POS mappings."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Restrict the deletion to a specific property."
      responses:
        "200":
          description: "Product deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Product not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/product/:id"
    get:
      tags:
        - "products"
      summary: "Get product"
      description: "Returns full details for a menu item, including POS metadata and modifiers."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Product details returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbProduct"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Product not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/product/:id"
    put:
      tags:
        - "products"
      summary: "Update product"
      description: "Updates menu item attributes or associated POS metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbProductUpdateRequest"
      responses:
        "200":
          description: "Product updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbProduct"
        "422":
          description: "Product not found or invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/product/:id"
  "/v1/fnb/products":
    get:
      tags:
        - "products"
      summary: "List products by category"
      description: "Returns products (and banner assets) for a given category or sub-category."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          required: true
          schema:
            type: "integer"
          description: "Property whose menu should be returned."
        - name: "categoryId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Category to filter on. Provide either categoryId or subCategoryId."
        - name: "subCategoryId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Sub-category to filter on."
      responses:
        "200":
          description: "Products returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          banners:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbBanner"
                          products:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbProductWithModifiers"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Neither categoryId nor subCategoryId provided."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/products"
  "/v1/fnb/qrcode":
    get:
      tags:
        - "products"
      summary: "Generate property QR code"
      description: "Returns (and if needed, generates) the QR code URL that routes guests to the property login page."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Override the property inferred from the session."
      responses:
        "200":
          description: "QR code URL returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: string
                        format: uri
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/qrcode"
  "/v1/fnb/subCategories/{id}":
    get:
      tags:
        - "products"
      summary: "List sub-categories"
      description: "Returns all sub-categories for the provided category."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Sub-categories returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbSubCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/subCategories/:id"
  "/v1/fnb/subCategory":
    post:
      tags:
        - "products"
      summary: "Create sub-category"
      description: "Creates a new sub-category under an existing category."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbSubCategoryCreateRequest"
      responses:
        "200":
          description: "Sub-category created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbSubCategory"
        "422":
          description: "Missing required fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/subCategory"
  "/v1/fnb/subCategory/{id}":
    delete:
      tags:
        - "products"
      summary: "Delete sub-category"
      description: "Deletes a sub-category."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Sub-category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Sub-category deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/subCategory/:id"
    get:
      tags:
        - "products"
      summary: "Get sub-category"
      description: "Returns details for a sub-category."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Sub-category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Sub-category returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbSubCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Sub-category not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/subCategory/:id"
    put:
      tags:
        - "products"
      summary: "Update sub-category"
      description: "Updates sub-category names or sequence."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Sub-category identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbSubCategoryUpdateRequest"
      responses:
        "200":
          description: "Sub-category updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbSubCategory"
        "422":
          description: "Sub-category not found or invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/subCategory/:id"
  "/v1/fnb/upload/category/{id}":
    post:
      tags:
        - "products"
      summary: "Upload category image"
      description: "Updates the primary image asset for a category."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Category image updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/upload/category/:id"
  "/v1/fnb/upload/product/{id}":
    post:
      tags:
        - "products"
      summary: "Upload product image"
      description: "Uploads or replaces product imagery."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Product image updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/upload/product/:id"
  "/v1/fnb/upload/subCategory/{id}":
    post:
      tags:
        - "products"
      summary: "Upload sub-category image"
      description: "Updates imagery for a sub-category."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Sub-category identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Sub-category image updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/products.js"
      x-express-mount: "/v1/fnb"
      x-express-sub-path: "/upload/subCategory/:id"
  "/v1/fnbOrder/Allorders":
    get:
      tags:
        - "orders"
      summary: "List domain orders"
      description: "Returns all orders for the authenticated domain, optionally filtered by property and date range."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          schema:
            type: "integer"
          required: false
          description: "Filter orders for a specific property."
        - name: "startDate"
          in: "query"
          schema:
            type: "string"
            format: "date-time"
          required: false
          description: "Inclusive start of the reporting window."
        - name: "endDate"
          in: "query"
          schema:
            type: "string"
            format: "date-time"
          required: false
          description: "Inclusive end of the reporting window."
      responses:
        "200":
          description: "Orders returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/Allorders"
  "/v1/fnbOrder/bottomOrderedItems":
    post:
      tags:
        - "orders"
      summary: "Bottom ordered items"
      description: "Returns the least ordered or never ordered items for the selected scope."
      security:
        - SessionToken: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderStatsRequest"
      responses:
        "200":
          description: "Items returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderedItemStats"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/bottomOrderedItems"
  "/v1/fnbOrder/closeOrder":
    post:
      tags:
        - "orders"
      summary: "Symphony POS webhook"
      description: "Webhook used by POS vendors to notify Woohoo when an order has been submitted/closed."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCloseEvent"
      responses:
        "200":
          description: "Webhook accepted."
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/closeOrder"
  "/v1/fnbOrder/order":
    post:
      tags:
        - "orders"
      summary: "Create F&B order"
      description: "Creates a new order, updates stock, logs activity, and dispatches notifications."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
      responses:
        "200":
          description: "Order created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Order"
        "400":
          description: "Validation error (for example, product out of stock)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/order"
  "/v1/fnbOrder/order/{id}":
    delete:
      tags:
        - "orders"
      summary: "Cancel order"
      description: "Cancels and deletes an order by ID."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Order primary key."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Order cancelled successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Invalid or missing order ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/order/:id"
    get:
      tags:
        - "orders"
      summary: "Get order details"
      description: "Fetches a single order including linked room and property metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Order primary key."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Order fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Order"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Order not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/order/:id"
    put:
      tags:
        - "orders"
      summary: "Update order status"
      description: "Updates an order (status, POS references) and appends the status timeline."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Order primary key."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateRequest"
      responses:
        "200":
          description: "Order updated successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Order"
        "400":
          description: "Invalid update payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/order/:id"
  "/v1/fnbOrder/orders":
    get:
      tags:
        - "orders"
      summary: "List orders for current user"
      description: "Returns orders placed by the authenticated user."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Orders returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/orders"
  "/v1/fnbOrder/ordersGraph":
    post:
      tags:
        - "orders"
      summary: "Aggregate order metrics"
      description: "Returns order counts and revenue grouped by day for the requested period."
      security:
        - SessionToken: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderGraphRequest"
      responses:
        "200":
          description: "Aggregated metrics returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/OrderGraphResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/ordersGraph"
  "/v1/fnbOrder/summary":
    get:
      tags:
        - "orders"
      summary: "Order summary"
      description: "Returns aggregate status counts and revenue totals for the domain/property."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          schema:
            type: "integer"
          required: false
          description: "Override the property inferred from the session."
      responses:
        "200":
          description: "Summary returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/OrderSummary"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/summary"
  "/v1/fnbOrder/topOrderedItems":
    post:
      tags:
        - "orders"
      summary: "Top ordered items"
      description: "Returns the most frequently ordered items for the selected scope."
      security:
        - SessionToken: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderStatsRequest"
      responses:
        "200":
          description: "Items returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/OrderedItemStats"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/orders.js"
      x-express-mount: "/v1/fnbOrder"
      x-express-sub-path: "/topOrderedItems"
  "/v1/forecast":
    post:
      tags:
        - "forecast"
      summary: "POST /v1/forecast"
      description: "Auto-generated from src/routes/forecast.js. Mounted at /v1/forecast with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/forecast.js"
      x-express-mount: "/v1/forecast"
      x-express-sub-path: "/"
  "/v1/forecast/region":
    post:
      tags:
        - "forecast"
      summary: "POST /v1/forecast/region"
      description: "Auto-generated from src/routes/forecast.js. Mounted at /v1/forecast with sub-path '/region'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/forecast.js"
      x-express-mount: "/v1/forecast"
      x-express-sub-path: "/region"
  "/v1/group":
    delete:
      tags:
        - "group"
      summary: "DELETE /v1/group"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/"
    post:
      tags:
        - "group"
      summary: "POST /v1/group"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/"
  "/v1/group/all":
    get:
      tags:
        - "group"
      summary: "GET /v1/group/all"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/all"
  "/v1/group/all/{id}/{propertyId}":
    get:
      tags:
        - "group"
      summary: "GET /v1/group/all/:id/:propertyId"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/all/:id/:propertyId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/all/:id/:propertyId"
  "/v1/group/domain":
    delete:
      tags:
        - "group"
      summary: "DELETE /v1/group/domain"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/domain'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/domain"
  "/v1/group/property":
    delete:
      tags:
        - "group"
      summary: "DELETE /v1/group/property"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/property'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/property"
  "/v1/group/{id}":
    put:
      tags:
        - "group"
      summary: "PUT /v1/group/:id"
      description: "Auto-generated from src/routes/group.js. Mounted at /v1/group with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group.js"
      x-express-mount: "/v1/group"
      x-express-sub-path: "/:id"
  "/v1/groupUserHub":
    post:
      tags:
        - "group-user-hub"
      summary: "POST /v1/groupUserHub"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/"
  "/v1/groupUserHub/hub":
    post:
      tags:
        - "group-user-hub"
      summary: "POST /v1/groupUserHub/hub"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hub'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hub"
    put:
      tags:
        - "group-user-hub"
      summary: "PUT /v1/groupUserHub/hub"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hub'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hub"
  "/v1/groupUserHub/hub/{hubId}/{userId}":
    delete:
      tags:
        - "group-user-hub"
      summary: "DELETE /v1/groupUserHub/hub/:hubId/:userId"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hub/:hubId/:userId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "userId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hub/:hubId/:userId"
  "/v1/groupUserHub/hubs":
    get:
      tags:
        - "group-user-hub"
      summary: "GET /v1/groupUserHub/hubs"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hubs'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hubs"
  "/v1/groupUserHub/hubs/all":
    get:
      tags:
        - "group-user-hub"
      summary: "GET /v1/groupUserHub/hubs/all"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hubs/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hubs/all"
  "/v1/groupUserHub/hubs/property":
    get:
      tags:
        - "group-user-hub"
      summary: "GET /v1/groupUserHub/hubs/property"
      description: "Auto-generated from src/routes/group-user-hub.js. Mounted at /v1/groupUserHub with sub-path '/hubs/property'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/group-user-hub.js"
      x-express-mount: "/v1/groupUserHub"
      x-express-sub-path: "/hubs/property"
  "/v1/honeywell/callScene":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/callScene"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/callScene'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/callScene"
  "/v1/honeywell/changeSetpoint":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/changeSetpoint"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/changeSetpoint'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/changeSetpoint"
  "/v1/honeywell/clearScene":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/clearScene"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/clearScene'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/clearScene"
  "/v1/honeywell/getRoomStatus/{hubId}":
    get:
      tags:
        - "honeywell"
      summary: "GET /v1/honeywell/getRoomStatus/:hubId"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/getRoomStatus/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/getRoomStatus/:hubId"
  "/v1/honeywell/setCurtainState":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/setCurtainState"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/setCurtainState'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/setCurtainState"
  "/v1/honeywell/setDnd":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/setDnd"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/setDnd'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/setDnd"
  "/v1/honeywell/setFanMode":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/setFanMode"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/setFanMode'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/setFanMode"
  "/v1/honeywell/setMur":
    post:
      tags:
        - "honeywell"
      summary: "POST /v1/honeywell/setMur"
      description: "Auto-generated from src/routes/honeywell.js. Mounted at /v1/honeywell with sub-path '/setMur'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/honeywell.js"
      x-express-mount: "/v1/honeywell"
      x-express-sub-path: "/setMur"
  "/v1/houseKeeping/categories":
    get:
      tags:
        - "housekeeping"
      summary: "GET /v1/houseKeeping/categories"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/categories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/categories"
  "/v1/houseKeeping/createOrder":
    post:
      tags:
        - "housekeeping"
      summary: "POST /v1/houseKeeping/createOrder"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/createOrder'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/createOrder"
  "/v1/houseKeeping/item":
    post:
      tags:
        - "housekeeping"
      summary: "POST /v1/houseKeeping/item"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/item'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/item"
  "/v1/houseKeeping/item/{id}":
    delete:
      tags:
        - "housekeeping"
      summary: "DELETE /v1/houseKeeping/item/:id"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/item/:id"
    put:
      tags:
        - "housekeeping"
      summary: "PUT /v1/houseKeeping/item/:id"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/item/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/item/:id"
  "/v1/houseKeeping/items":
    get:
      tags:
        - "housekeeping"
      summary: "GET /v1/houseKeeping/items"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/items'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/items"
  "/v1/houseKeeping/subCategories":
    get:
      tags:
        - "housekeeping"
      summary: "GET /v1/houseKeeping/subCategories"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/subCategories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/subCategories"
  "/v1/houseKeeping/subItem/{id}":
    delete:
      tags:
        - "housekeeping"
      summary: "DELETE /v1/houseKeeping/subItem/:id"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/subItem/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/subItem/:id"
    put:
      tags:
        - "housekeeping"
      summary: "PUT /v1/houseKeeping/subItem/:id"
      description: "Auto-generated from src/routes/housekeeping.js. Mounted at /v1/houseKeeping with sub-path '/subItem/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/housekeeping.js"
      x-express-mount: "/v1/houseKeeping"
      x-express-sub-path: "/subItem/:id"
  "/v1/hub":
    get:
      tags:
        - "hub"
      summary: "GET /v1/hub"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/"
    post:
      tags:
        - "hub"
      summary: "POST /v1/hub"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/"
  "/v1/hub/bulkSettingsMode":
    post:
      tags:
        - "hub"
      summary: "POST /v1/hub/bulkSettingsMode"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/bulkSettingsMode'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/bulkSettingsMode"
  "/v1/hub/disable/{hubId}":
    get:
      tags:
        - "hub"
      summary: "GET /v1/hub/disable/:hubId"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/disable/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/disable/:hubId"
  "/v1/hub/liveFeedAccess/{hubId}":
    post:
      tags:
        - "hub"
      summary: "POST /v1/hub/liveFeedAccess/:hubId"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/liveFeedAccess/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/liveFeedAccess/:hubId"
  "/v1/hub/music/{id}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/music/:id"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/music/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/music/:id"
  "/v1/hub/settingsMode/{id}/{userId}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/settingsMode/:id/:userId"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/settingsMode/:id/:userId'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "userId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/settingsMode/:id/:userId"
  "/v1/hub/surveillance/{id}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/surveillance/:id"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/surveillance/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/surveillance/:id"
  "/v1/hub/timeZone":
    get:
      tags:
        - "hub"
      summary: "GET /v1/hub/timeZone"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/timeZone'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/timeZone"
  "/v1/hub/timeZone/{hubId}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/timeZone/:hubId"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/timeZone/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/timeZone/:hubId"
  "/v1/hub/volume/{id}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/volume/:id"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/volume/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/volume/:id"
  "/v1/hub/{id}":
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/:id"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/:id"
  "/v1/hub/{id}/status":
    get:
      tags:
        - "hub"
      summary: "GET /v1/hub/:id/status"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/:id/status'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/:id/status"
    put:
      tags:
        - "hub"
      summary: "PUT /v1/hub/:id/status"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/:id/status'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/:id/status"
  "/v1/hub/{id}/{userId}/status":
    get:
      tags:
        - "hub"
      summary: "GET /v1/hub/:id/:userId/status"
      description: "Auto-generated from src/routes/hub.js. Mounted at /v1/hub with sub-path '/:id/:userId/status'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "userId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/hub.js"
      x-express-mount: "/v1/hub"
      x-express-sub-path: "/:id/:userId/status"
  "/v1/intent":
    delete:
      tags:
        - "intent"
      summary: "DELETE /v1/intent"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/"
    get:
      tags:
        - "intent"
      summary: "GET /v1/intent"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/"
    post:
      tags:
        - "intent"
      summary: "POST /v1/intent"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/"
    put:
      tags:
        - "intent"
      summary: "PUT /v1/intent"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/"
  "/v1/intent/all/{serviceId}":
    get:
      tags:
        - "intent"
      summary: "GET /v1/intent/all/:serviceId"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/all/:serviceId'."
      parameters:
        - name: "serviceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/all/:serviceId"
  "/v1/intent/train/{serviceId}":
    put:
      tags:
        - "intent"
      summary: "PUT /v1/intent/train/:serviceId"
      description: "Auto-generated from src/routes/intent.js. Mounted at /v1/intent with sub-path '/train/:serviceId'."
      parameters:
        - name: "serviceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/intent.js"
      x-express-mount: "/v1/intent"
      x-express-sub-path: "/train/:serviceId"
  "/v1/interel/callScene":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/callScene"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/callScene'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/callScene"
  "/v1/interel/changeSetpoint":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/changeSetpoint"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/changeSetpoint'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/changeSetpoint"
  "/v1/interel/getRoomStatus/{hubId}":
    get:
      tags:
        - "interel"
      summary: "GET /v1/interel/getRoomStatus/:hubId"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/getRoomStatus/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/getRoomStatus/:hubId"
  "/v1/interel/sendMurAlert":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/sendMurAlert"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/sendMurAlert'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/sendMurAlert"
  "/v1/interel/setBlindState":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/setBlindState"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/setBlindState'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/setBlindState"
  "/v1/interel/setCurtainState":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/setCurtainState"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/setCurtainState'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/setCurtainState"
  "/v1/interel/setDnd":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/setDnd"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/setDnd'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/setDnd"
  "/v1/interel/setFanMode":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/setFanMode"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/setFanMode'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/setFanMode"
  "/v1/interel/setMur":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/setMur"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/setMur'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/setMur"
  "/v1/interel/toggleLight":
    post:
      tags:
        - "interel"
      summary: "POST /v1/interel/toggleLight"
      description: "Auto-generated from src/routes/interel.js. Mounted at /v1/interel with sub-path '/toggleLight'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/interel.js"
      x-express-mount: "/v1/interel"
      x-express-sub-path: "/toggleLight"
  "/v1/language/add":
    post:
      tags:
        - "languageService"
      summary: "POST /v1/language/add"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/add'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/add"
  "/v1/language/markVerified":
    put:
      tags:
        - "languageService"
      summary: "PUT /v1/language/markVerified"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/markVerified'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/markVerified"
  "/v1/language/populateTranslations/{path}":
    post:
      tags:
        - "languageService"
      summary: "POST /v1/language/populateTranslations/:path"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/populateTranslations/:path'."
      parameters:
        - name: "path"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/populateTranslations/:path"
  "/v1/language/translateByDomain":
    post:
      tags:
        - "languageService"
      summary: "POST /v1/language/translateByDomain"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/translateByDomain'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/translateByDomain"
  "/v1/language/translateByKey/{key}":
    get:
      tags:
        - "languageService"
      summary: "GET /v1/language/translateByKey/:key"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/translateByKey/:key'."
      parameters:
        - name: "key"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/translateByKey/:key"
  "/v1/language/translation/{key}":
    delete:
      tags:
        - "languageService"
      summary: "DELETE /v1/language/translation/:key"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/translation/:key'."
      parameters:
        - name: "key"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/translation/:key"
  "/v1/language/translationsByTable/{tableName}":
    post:
      tags:
        - "languageService"
      summary: "POST /v1/language/translationsByTable/:tableName"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/translationsByTable/:tableName'."
      parameters:
        - name: "tableName"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/translationsByTable/:tableName"
  "/v1/language/updateTranslation/{key}":
    put:
      tags:
        - "languageService"
      summary: "PUT /v1/language/updateTranslation/:key"
      description: "Auto-generated from src/routes/languageService.js. Mounted at /v1/language with sub-path '/updateTranslation/:key'."
      parameters:
        - name: "key"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/languageService.js"
      x-express-mount: "/v1/language"
      x-express-sub-path: "/updateTranslation/:key"
  "/v1/liveFeed/token":
    get:
      tags:
        - "liveFeed"
      summary: "GET /v1/liveFeed/token"
      description: "Auto-generated from src/routes/liveFeed.js. Mounted at /v1/liveFeed with sub-path '/token'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/liveFeed.js"
      x-express-mount: "/v1/liveFeed"
      x-express-sub-path: "/token"
    post:
      tags:
        - "liveFeed"
      summary: "POST /v1/liveFeed/token"
      description: "Auto-generated from src/routes/liveFeed.js. Mounted at /v1/liveFeed with sub-path '/token'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/liveFeed.js"
      x-express-mount: "/v1/liveFeed"
      x-express-sub-path: "/token"
  "/v1/liveFeed/{hubId}":
    post:
      tags:
        - "liveFeed"
      summary: "POST /v1/liveFeed/:hubId"
      description: "Auto-generated from src/routes/liveFeed.js. Mounted at /v1/liveFeed with sub-path '/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/liveFeed.js"
      x-express-mount: "/v1/liveFeed"
      x-express-sub-path: "/:hubId"
  "/v1/locale":
    get:
      tags:
        - "locale"
      summary: "GET /v1/locale"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/"
    post:
      tags:
        - "locale"
      summary: "POST /v1/locale"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/"
  "/v1/locale/{id}":
    delete:
      tags:
        - "locale"
      summary: "DELETE /v1/locale/:id"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "locale"
      summary: "PUT /v1/locale/:id"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/:id"
  "/v1/locale/{id}/complete-upload-intro-video":
    post:
      tags:
        - "locale"
      summary: "POST /v1/locale/:id/complete-upload-intro-video"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/:id/complete-upload-intro-video'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/:id/complete-upload-intro-video"
  "/v1/locale/{id}/initiate-intro-video":
    post:
      tags:
        - "locale"
      summary: "POST /v1/locale/:id/initiate-intro-video"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/:id/initiate-intro-video'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/:id/initiate-intro-video"
  "/v1/locale/{id}/upload-intro-video":
    post:
      tags:
        - "locale"
      summary: "POST /v1/locale/:id/upload-intro-video"
      description: "Auto-generated from src/routes/locale.js. Mounted at /v1/locale with sub-path '/:id/upload-intro-video'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/locale.js"
      x-express-mount: "/v1/locale"
      x-express-sub-path: "/:id/upload-intro-video"
  "/v1/melsuite/config":
    get:
      tags:
        - "melsuite"
      summary: "GET /v1/melsuite/config"
      description: "Auto-generated from src/routes/melsuite.js. Mounted at /v1/melsuite with sub-path '/config'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/melsuite.js"
      x-express-mount: "/v1/melsuite"
      x-express-sub-path: "/config"
  "/v1/melsuite/send":
    post:
      tags:
        - "melsuite"
      summary: "POST /v1/melsuite/send"
      description: "Auto-generated from src/routes/melsuite.js. Mounted at /v1/melsuite with sub-path '/send'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/melsuite.js"
      x-express-mount: "/v1/melsuite"
      x-express-sub-path: "/send"
  "/v1/melsuite/track":
    post:
      tags:
        - "melsuite"
      summary: "POST /v1/melsuite/track"
      description: "Auto-generated from src/routes/melsuite.js. Mounted at /v1/melsuite with sub-path '/track'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/melsuite.js"
      x-express-mount: "/v1/melsuite"
      x-express-sub-path: "/track"
  "/v1/news/general/{topic}":
    get:
      tags:
        - "news"
      summary: "GET /v1/news/general/:topic"
      description: "Auto-generated from src/routes/news.js. Mounted at /v1/news with sub-path '/general/:topic'."
      parameters:
        - name: "topic"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/news.js"
      x-express-mount: "/v1/news"
      x-express-sub-path: "/general/:topic"
  "/v1/news/location/{location}":
    get:
      tags:
        - "news"
      summary: "GET /v1/news/location/:location"
      description: "Auto-generated from src/routes/news.js. Mounted at /v1/news with sub-path '/location/:location'."
      parameters:
        - name: "location"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/news.js"
      x-express-mount: "/v1/news"
      x-express-sub-path: "/location/:location"
  "/v1/news/npr":
    get:
      tags:
        - "news"
      summary: "GET /v1/news/npr"
      description: "Auto-generated from src/routes/news.js. Mounted at /v1/news with sub-path '/npr'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/news.js"
      x-express-mount: "/v1/news"
      x-express-sub-path: "/npr"
  "/v1/outlook/accessToken":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/accessToken"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/accessToken'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/accessToken"
  "/v1/outlook/createEvent":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/createEvent"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/createEvent'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/createEvent"
  "/v1/outlook/deleteMail":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/deleteMail"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/deleteMail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/deleteMail"
  "/v1/outlook/forwardMail":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/forwardMail"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/forwardMail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/forwardMail"
  "/v1/outlook/getEvents":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/getEvents"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/getEvents'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/getEvents"
  "/v1/outlook/getMail":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/getMail"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/getMail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/getMail"
  "/v1/outlook/getMessages":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/getMessages"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/getMessages'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/getMessages"
  "/v1/outlook/home":
    get:
      tags:
        - "outlook"
      summary: "GET /v1/outlook/home"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/home'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/home"
  "/v1/outlook/logout":
    get:
      tags:
        - "outlook"
      summary: "GET /v1/outlook/logout"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/logout'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/logout"
  "/v1/outlook/refreshToken":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/refreshToken"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/refreshToken'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/refreshToken"
  "/v1/outlook/replyMail":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/replyMail"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/replyMail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/replyMail"
  "/v1/outlook/sendMail":
    post:
      tags:
        - "outlook"
      summary: "POST /v1/outlook/sendMail"
      description: "Auto-generated from src/routes/outlook.js. Mounted at /v1/outlook with sub-path '/sendMail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlook.js"
      x-express-mount: "/v1/outlook"
      x-express-sub-path: "/sendMail"
  "/v1/ping":
    get:
      tags:
        - "ping"
      summary: "Service health check"
      description: "Returns `pong` so external monitors can confirm the API is reachable. Implemented in src/routes/ping.js."
      responses:
        "200":
          description: "Service is reachable."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PingResponse"
              examples:
                default:
                  value:
                    success: true
                    data: pong
      x-source-file: "src/routes/ping.js"
      x-express-mount: "/v1"
      x-express-sub-path: "/ping"
  "/v1/pms-webhook-event/hotelkey":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/hotelkey"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/hotelkey'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/hotelkey"
  "/v1/pms-webhook-event/mews":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/mews"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/mews'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/mews"
  "/v1/pms-webhook-event/xenia/checkin":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/xenia/checkin"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/xenia/checkin'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/xenia/checkin"
  "/v1/pms-webhook-event/xenia/checkout":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/xenia/checkout"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/xenia/checkout'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/xenia/checkout"
  "/v1/pms-webhook-event/xenia/guest_detail_change":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/xenia/guest_detail_change"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/xenia/guest_detail_change'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/xenia/guest_detail_change"
  "/v1/pms-webhook-event/xenia/move":
    post:
      tags:
        - "pmsWebhookRoute"
      summary: "POST /v1/pms-webhook-event/xenia/move"
      description: "Auto-generated from src/routes/pmsWebhookRoute.js. Mounted at /v1/pms-webhook-event with sub-path '/xenia/move'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pmsWebhookRoute.js"
      x-express-mount: "/v1/pms-webhook-event"
      x-express-sub-path: "/xenia/move"
  "/v1/pms/property/{propertyId}/pmsvendor":
    get:
      tags:
        - "pms"
      summary: "GET /v1/pms/property/:propertyId/pmsvendor"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor"
    post:
      tags:
        - "pms"
      summary: "POST /v1/pms/property/:propertyId/pmsvendor"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor"
  "/v1/pms/property/{propertyId}/pmsvendor/{pmsVendorId}":
    delete:
      tags:
        - "pms"
      summary: "DELETE /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId"
    patch:
      tags:
        - "pms"
      summary: "PATCH /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId"
  "/v1/pms/property/{propertyId}/pmsvendor/{pmsVendorId}/apiConfigure":
    get:
      tags:
        - "pms"
      summary: "GET /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure"
    post:
      tags:
        - "pms"
      summary: "POST /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure"
  "/v1/pms/property/{propertyId}/pmsvendor/{pmsVendorId}/apiConfigure/{apiConfigureId}":
    delete:
      tags:
        - "pms"
      summary: "DELETE /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "apiConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId"
    patch:
      tags:
        - "pms"
      summary: "PATCH /v1/pms/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId"
      description: "Auto-generated from src/routes/pms.js. Mounted at /v1/pms with sub-path '/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "pmsVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "apiConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pms.js"
      x-express-mount: "/v1/pms"
      x-express-sub-path: "/property/:propertyId/pmsvendor/:pmsVendorId/apiConfigure/:apiConfigureId"
  "/v1/pos/property/lightspeed-test":
    post:
      tags:
        - "pos"
      summary: "POST /v1/pos/property/lightspeed-test"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/lightspeed-test'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/lightspeed-test"
  "/v1/pos/property/{propertyId}/posvendor":
    get:
      tags:
        - "pos"
      summary: "GET /v1/pos/property/:propertyId/posvendor"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor"
    post:
      tags:
        - "pos"
      summary: "POST /v1/pos/property/:propertyId/posvendor"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor"
  "/v1/pos/property/{propertyId}/posvendor/{posVendorId}":
    delete:
      tags:
        - "pos"
      summary: "DELETE /v1/pos/property/:propertyId/posvendor/:posVendorId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId"
    patch:
      tags:
        - "pos"
      summary: "PATCH /v1/pos/property/:propertyId/posvendor/:posVendorId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId"
  "/v1/pos/property/{propertyId}/posvendor/{posVendorId}/apiConfigure":
    get:
      tags:
        - "pos"
      summary: "GET /v1/pos/property/:propertyId/posvendor/:posVendorId/apiConfigure"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/apiConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/apiConfigure"
    post:
      tags:
        - "pos"
      summary: "POST /v1/pos/property/:propertyId/posvendor/:posVendorId/apiConfigure"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/apiConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/apiConfigure"
  "/v1/pos/property/{propertyId}/posvendor/{posVendorId}/apiConfigure/{apiConfigureId}":
    delete:
      tags:
        - "pos"
      summary: "DELETE /v1/pos/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "apiConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId"
    patch:
      tags:
        - "pos"
      summary: "PATCH /v1/pos/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "apiConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/apiConfigure/:apiConfigureId"
  "/v1/pos/property/{propertyId}/posvendor/{posVendorId}/scheduleConfigure":
    get:
      tags:
        - "pos"
      summary: "GET /v1/pos/property/:propertyId/posvendor/:posVendorId/scheduleConfigure"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/scheduleConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/scheduleConfigure"
    post:
      tags:
        - "pos"
      summary: "POST /v1/pos/property/:propertyId/posvendor/:posVendorId/scheduleConfigure"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/scheduleConfigure'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/scheduleConfigure"
  "/v1/pos/property/{propertyId}/posvendor/{posVendorId}/scheduleConfigure/{scheduleConfigureId}":
    delete:
      tags:
        - "pos"
      summary: "DELETE /v1/pos/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "scheduleConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId"
    patch:
      tags:
        - "pos"
      summary: "PATCH /v1/pos/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId"
      description: "Auto-generated from src/routes/pos.js. Mounted at /v1/pos with sub-path '/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "posVendorId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "scheduleConfigureId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/pos.js"
      x-express-mount: "/v1/pos"
      x-express-sub-path: "/property/:propertyId/posvendor/:posVendorId/scheduleConfigure/:scheduleConfigureId"
  "/v1/properties":
    delete:
      tags:
        - "property-details"
      summary: "DELETE /v1/properties"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/"
    get:
      tags:
        - "property-details"
      summary: "GET /v1/properties"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/"
    post:
      tags:
        - "property-details"
      summary: "POST /v1/properties"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/"
  "/v1/properties/device":
    post:
      tags:
        - "property-details"
      summary: "POST /v1/properties/device"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/device'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/device"
  "/v1/properties/gallery":
    post:
      tags:
        - "property-details"
      summary: "POST /v1/properties/gallery"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/gallery'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/gallery"
  "/v1/properties/gallery/array/{id}":
    put:
      tags:
        - "property-details"
      summary: "PUT /v1/properties/gallery/array/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/gallery/array/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/gallery/array/:id"
  "/v1/properties/gallery/{id}":
    get:
      tags:
        - "property-details"
      summary: "GET /v1/properties/gallery/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/gallery/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/gallery/:id"
    put:
      tags:
        - "property-details"
      summary: "PUT /v1/properties/gallery/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/gallery/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/gallery/:id"
  "/v1/properties/property/image":
    get:
      tags:
        - "property-details"
      summary: "GET /v1/properties/property/image"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/property/image'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/property/image"
  "/v1/properties/screensaver/device":
    post:
      tags:
        - "property-details"
      summary: "POST /v1/properties/screensaver/device"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/screensaver/device'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/screensaver/device"
  "/v1/properties/screensaver/{id}":
    get:
      tags:
        - "property-details"
      summary: "GET /v1/properties/screensaver/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/screensaver/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/screensaver/:id"
    put:
      tags:
        - "property-details"
      summary: "PUT /v1/properties/screensaver/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/screensaver/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/screensaver/:id"
  "/v1/properties/{id}":
    get:
      tags:
        - "property-details"
      summary: "GET /v1/properties/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "property-details"
      summary: "PUT /v1/properties/:id"
      description: "Auto-generated from src/routes/property-details.js. Mounted at /v1/properties with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-details.js"
      x-express-mount: "/v1/properties"
      x-express-sub-path: "/:id"
  "/v1/propertyContact":
    delete:
      tags:
        - "property-contact-details"
      summary: "DELETE /v1/propertyContact"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/"
    post:
      tags:
        - "property-contact-details"
      summary: "POST /v1/propertyContact"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/"
  "/v1/propertyContact/device":
    post:
      tags:
        - "property-contact-details"
      summary: "POST /v1/propertyContact/device"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/device'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/device"
  "/v1/propertyContact/name":
    post:
      tags:
        - "property-contact-details"
      summary: "POST /v1/propertyContact/name"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/name'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/name"
  "/v1/propertyContact/property/{id}":
    get:
      tags:
        - "property-contact-details"
      summary: "GET /v1/propertyContact/property/:id"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/property/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/property/:id"
  "/v1/propertyContact/{id}":
    get:
      tags:
        - "property-contact-details"
      summary: "GET /v1/propertyContact/:id"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "property-contact-details"
      summary: "PUT /v1/propertyContact/:id"
      description: "Auto-generated from src/routes/property-contact-details.js. Mounted at /v1/propertyContact with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-contact-details.js"
      x-express-mount: "/v1/propertyContact"
      x-express-sub-path: "/:id"
  "/v1/propertyServices":
    delete:
      tags:
        - "property-services"
      summary: "Delete property service"
      description: "Deletes a property service entry identified by the `id` query parameter."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
          description: "Identifier of the property service to delete."
      responses:
        "200":
          description: "Property service removed."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "406":
          description: "Missing `id` query parameter."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/"
    post:
      tags:
        - "property-services"
      summary: "Create property service"
      description: "Creates a new property service with images and slot configuration."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PropertyServiceCreateRequest"
      responses:
        "200":
          description: "Property service created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/PropertyService"
        "422":
          description: "Missing required fields or files."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/"
  "/v1/propertyServices/allDateSlots/{id}":
    get:
      tags:
        - "property-services"
      summary: "List upcoming slot dates"
      description: "Returns all available dates for the specified service."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "Service identifier."
      responses:
        "200":
          description: "Dates returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceSlot"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/allDateSlots/:id"
  "/v1/propertyServices/allSlots/{id}":
    get:
      tags:
        - "property-services"
      summary: "List all slots for service"
      description: "Returns every slot for the service, regardless of availability."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "Service identifier."
      responses:
        "200":
          description: "Slots returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceSlot"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/allSlots/:id"
  "/v1/propertyServices/allSlots/{id}/{date}":
    get:
      tags:
        - "property-services"
      summary: "List slots for date"
      description: "Returns all slot entries for a given date regardless of booking state."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "Service identifier."
        - name: "date"
          in: "path"
          required: true
          schema:
            type: "string"
            example: "2024-01-31"
          description: "Date in YYYY-MM-DD."
      responses:
        "200":
          description: "Slots returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceSlot"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/allSlots/:id/:date"
  "/v1/propertyServices/booking":
    delete:
      tags:
        - "property-services"
      summary: "Cancel booking"
      description: "Cancels an existing booking identified by the `id` query parameter."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "Booking cancelled successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "406":
          description: "Missing `id` query parameter."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/booking"
    post:
      tags:
        - "property-services"
      summary: "Create booking"
      description: "Books a slot for the specified property service."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyServiceBookingRequest"
      responses:
        "200":
          description: "Booking created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/PropertyServiceBooking"
        "422":
          description: "Missing required booking fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/booking"
  "/v1/propertyServices/bookings":
    get:
      tags:
        - "property-services"
      summary: "List bookings for user"
      description: "Returns bookings associated with the current user/device/room context."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Bookings fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceBooking"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/bookings"
  "/v1/propertyServices/device":
    get:
      tags:
        - "property-services"
      summary: "List services for device"
      description: "Returns visible property services for the device inferred from the session."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Services fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyService"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/device"
  "/v1/propertyServices/property/{id}":
    get:
      tags:
        - "property-services"
      summary: "List services for property"
      description: "Returns services configured for the specified property. Includes language-aware content when the `language` header is supplied."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "Property identifier."
      responses:
        "200":
          description: "Services fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyService"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/property/:id"
  "/v1/propertyServices/slots/{id}":
    get:
      tags:
        - "property-services"
      summary: "List available slots"
      description: "Returns only available slots for the given service ID."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "Service identifier."
      responses:
        "200":
          description: "Available slots returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceSlot"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/slots/:id"
  "/v1/propertyServices/slots/{id}/{date}":
    get:
      tags:
        - "property-services"
      summary: "List available slots for date"
      description: "Returns available slots for the service on the specified date."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
        - name: "date"
          in: "path"
          required: true
          schema:
            type: "string"
            example: "2024-01-31"
      responses:
        "200":
          description: "Available slots returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyServiceSlot"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/slots/:id/:date"
  "/v1/propertyServices/{id}":
    get:
      tags:
        - "property-services"
      summary: "Get property service"
      description: "Returns a single property service, including translated content when available."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "Property service returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/PropertyService"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "property-services"
      summary: "Update property service"
      description: "Updates a property service, replacing images when new files are supplied."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PropertyServiceUpdateRequest"
      responses:
        "200":
          description: "Property service updated successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/PropertyService"
        "422":
          description: "Missing required fields or files."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/property-services.js"
      x-express-mount: "/v1/propertyServices"
      x-express-sub-path: "/:id"
  "/v1/propertyWebhook/configuration/{propertyId}":
    get:
      tags:
        - "property-webhook"
      summary: "GET /v1/propertyWebhook/configuration/:propertyId"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/configuration/:propertyId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/configuration/:propertyId"
    post:
      tags:
        - "property-webhook"
      summary: "POST /v1/propertyWebhook/configuration/:propertyId"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/configuration/:propertyId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/configuration/:propertyId"
  "/v1/propertyWebhook/configuration/{propertyId}/{roomNo}":
    get:
      tags:
        - "property-webhook"
      summary: "GET /v1/propertyWebhook/configuration/:propertyId/:roomNo"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/configuration/:propertyId/:roomNo'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/configuration/:propertyId/:roomNo"
  "/v1/propertyWebhook/event":
    get:
      tags:
        - "property-webhook"
      summary: "GET /v1/propertyWebhook/event"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/event'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/event"
    post:
      tags:
        - "property-webhook"
      summary: "POST /v1/propertyWebhook/event"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/event'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/event"
  "/v1/propertyWebhook/subscribe/{propertyId}/{roomNo}":
    patch:
      tags:
        - "property-webhook"
      summary: "PATCH /v1/propertyWebhook/subscribe/:propertyId/:roomNo"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/subscribe/:propertyId/:roomNo'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/subscribe/:propertyId/:roomNo"
  "/v1/propertyWebhook/unsubscribe/{propertyId}/{roomNo}":
    patch:
      tags:
        - "property-webhook"
      summary: "PATCH /v1/propertyWebhook/unsubscribe/:propertyId/:roomNo"
      description: "Auto-generated from src/routes/property-webhook.js. Mounted at /v1/propertyWebhook with sub-path '/unsubscribe/:propertyId/:roomNo'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/property-webhook.js"
      x-express-mount: "/v1/propertyWebhook"
      x-express-sub-path: "/unsubscribe/:propertyId/:roomNo"
  "/v1/publicService/all":
    get:
      tags:
        - "publicService"
      summary: "GET /v1/publicService/all"
      description: "Auto-generated from src/routes/publicService.js. Mounted at /v1/publicService with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/publicService.js"
      x-express-mount: "/v1/publicService"
      x-express-sub-path: "/all"
  "/v1/publicService/allServices":
    get:
      tags:
        - "publicService"
      summary: "GET /v1/publicService/allServices"
      description: "Auto-generated from src/routes/publicService.js. Mounted at /v1/publicService with sub-path '/allServices'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/publicService.js"
      x-express-mount: "/v1/publicService"
      x-express-sub-path: "/allServices"
  "/v1/publicService/approve/{id}":
    put:
      tags:
        - "publicService"
      summary: "PUT /v1/publicService/approve/:id"
      description: "Auto-generated from src/routes/publicService.js. Mounted at /v1/publicService with sub-path '/approve/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/publicService.js"
      x-express-mount: "/v1/publicService"
      x-express-sub-path: "/approve/:id"
  "/v1/publicService/copy":
    post:
      tags:
        - "publicService"
      summary: "POST /v1/publicService/copy"
      description: "Auto-generated from src/routes/publicService.js. Mounted at /v1/publicService with sub-path '/copy'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/publicService.js"
      x-express-mount: "/v1/publicService"
      x-express-sub-path: "/copy"
  "/v1/publicService/upgrade":
    post:
      tags:
        - "publicService"
      summary: "POST /v1/publicService/upgrade"
      description: "Auto-generated from src/routes/publicService.js. Mounted at /v1/publicService with sub-path '/upgrade'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/publicService.js"
      x-express-mount: "/v1/publicService"
      x-express-sub-path: "/upgrade"
  "/v1/quickLinks":
    delete:
      tags:
        - "quickLinks"
      summary: "DELETE /v1/quickLinks"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/"
    get:
      tags:
        - "quickLinks"
      summary: "GET /v1/quickLinks"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/"
    post:
      tags:
        - "quickLinks"
      summary: "POST /v1/quickLinks"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/"
  "/v1/quickLinks/sequence":
    post:
      tags:
        - "quickLinks"
      summary: "POST /v1/quickLinks/sequence"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/sequence'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/sequence"
  "/v1/quickLinks/{id}":
    get:
      tags:
        - "quickLinks"
      summary: "GET /v1/quickLinks/:id"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "quickLinks"
      summary: "PUT /v1/quickLinks/:id"
      description: "Auto-generated from src/routes/quickLinks.js. Mounted at /v1/quickLinks with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/quickLinks.js"
      x-express-mount: "/v1/quickLinks"
      x-express-sub-path: "/:id"
  "/v1/reminder":
    get:
      tags:
        - "reminder"
      summary: "GET /v1/reminder"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/"
    post:
      tags:
        - "reminder"
      summary: "POST /v1/reminder"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/"
  "/v1/reminder/all/{hubId}":
    delete:
      tags:
        - "reminder"
      summary: "DELETE /v1/reminder/all/:hubId"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/all/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/all/:hubId"
  "/v1/reminder/{hubId}":
    get:
      tags:
        - "reminder"
      summary: "GET /v1/reminder/:hubId"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/:hubId"
  "/v1/reminder/{hubId}/{id}":
    get:
      tags:
        - "reminder"
      summary: "GET /v1/reminder/:hubId/:id"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/:hubId/:id'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/:hubId/:id"
  "/v1/reminder/{id}":
    delete:
      tags:
        - "reminder"
      summary: "DELETE /v1/reminder/:id"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/:id"
    post:
      tags:
        - "reminder"
      summary: "POST /v1/reminder/:id"
      description: "Auto-generated from src/routes/reminder.js. Mounted at /v1/reminder with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/reminder.js"
      x-express-mount: "/v1/reminder"
      x-express-sub-path: "/:id"
  "/v1/restaurant/allProducts":
    get:
      tags:
        - "fnbUserSession"
      summary: "List all products (guest view)"
      description: "Returns the full product catalog for the guest session's domain and property."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Products returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbProduct"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/allProducts"
  "/v1/restaurant/banner":
    get:
      tags:
        - "fnbUserSession"
      summary: "List banners (guest view)"
      description: "Returns marketing banners for the guest session's domain."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Banners returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/FnbBanner"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/banner"
  "/v1/restaurant/categories":
    get:
      tags:
        - "fnbUserSession"
      summary: "List categories (guest view)"
      description: "Returns categories and banner metadata for the guest session's domain/property."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Categories returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          banners:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbBanner"
                          categories:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/categories"
  "/v1/restaurant/login":
    post:
      tags:
        - "fnbUserSession"
      summary: "Guest session login"
      description: "Creates a guest session using hotel-issued sessionId, propertyId, and domainId."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbGuestLoginRequest"
      responses:
        "200":
          description: "Guest session created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbGuestLoginResponse"
        "400":
          description: "Missing or invalid login payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/login"
  "/v1/restaurant/logout":
    get:
      tags:
        - "fnbUserSession"
      summary: "Guest session logout"
      description: "Revokes the current guest session."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Logged out successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/logout"
  "/v1/restaurant/order":
    post:
      tags:
        - "fnbUserSession"
      summary: "Place guest order"
      description: "Creates an order on behalf of the guest session using the current room/device context."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FnbGuestOrderRequest"
      responses:
        "200":
          description: "Order created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Order"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Validation error (for example missing items)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/order"
  "/v1/restaurant/product/{id}":
    get:
      tags:
        - "fnbUserSession"
      summary: "Get product (guest view)"
      description: "Returns a single product for the guest session, including translated fields when requested."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Product identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Product returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/FnbProduct"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Product not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/product/:id"
  "/v1/restaurant/products":
    get:
      tags:
        - "fnbUserSession"
      summary: "List products by category (guest view)"
      description: "Returns products for the specified category or sub-category for the current guest session."
      security:
        - SessionToken: []
      parameters:
        - name: "categoryId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Category identifier. Provide either categoryId or subCategoryId."
        - name: "subCategoryId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Sub-category identifier."
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Override property pulled from the session."
      responses:
        "200":
          description: "Products returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          banners:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbBanner"
                          products:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbProductWithModifiers"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Neither categoryId nor subCategoryId provided."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/products"
  "/v1/restaurant/subCategories/{id}":
    get:
      tags:
        - "fnbUserSession"
      summary: "List sub-categories (guest view)"
      description: "Returns sub-categories and banners for a given category within the guest session context."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Category identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Sub-categories returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          banners:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbBanner"
                          subCategories:
                            type: array
                            items:
                              $ref: "#/components/schemas/FnbSubCategory"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/fnbUserSession.js"
      x-express-mount: "/v1/restaurant"
      x-express-sub-path: "/subCategories/:id"
  "/v1/restaurants":
    get:
      tags:
        - "restaurant"
      summary: "List restaurants"
      description: "Returns restaurants configured for the authenticated domain/property."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "query"
          required: false
          schema:
            type: "integer"
          description: "Filter restaurants by property."
      responses:
        "200":
          description: "Restaurants returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Restaurant"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/"
    post:
      tags:
        - "restaurant"
      summary: "Create restaurant"
      description: "Creates a restaurant definition for F&B operations."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantCreateRequest"
      responses:
        "200":
          description: "Restaurant created."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Restaurant"
        "422":
          description: "Validation failed."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/"
  "/v1/restaurants/upload/{id}":
    post:
      tags:
        - "restaurant"
      summary: "Upload restaurant media"
      description: "Uploads images for a restaurant."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Restaurant identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Restaurant images updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Restaurant"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/upload/:id"
  "/v1/restaurants/{id}":
    delete:
      tags:
        - "restaurant"
      summary: "Delete restaurant"
      description: "Deletes a restaurant definition."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Restaurant identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Restaurant deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "422":
          description: "Restaurant not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "restaurant"
      summary: "Get restaurant"
      description: "Returns a single restaurant definition."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Restaurant identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Restaurant returned."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Restaurant"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Restaurant not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "restaurant"
      summary: "Update restaurant"
      description: "Updates restaurant details."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Restaurant identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantUpdateRequest"
      responses:
        "200":
          description: "Restaurant updated."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Restaurant"
        "422":
          description: "Restaurant not found or invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/restaurant.js"
      x-express-mount: "/v1/restaurants"
      x-express-sub-path: "/:id"
  "/v1/retailOutlets":
    get:
      tags:
        - "retail-outlet"
      summary: "GET /v1/retailOutlets"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/"
    post:
      tags:
        - "retail-outlet"
      summary: "POST /v1/retailOutlets"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/"
  "/v1/retailOutlets/loyalty":
    post:
      tags:
        - "retail-outlet"
      summary: "POST /v1/retailOutlets/loyalty"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/loyalty'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/loyalty"
  "/v1/retailOutlets/loyalty/{outletId}":
    get:
      tags:
        - "retail-outlet"
      summary: "GET /v1/retailOutlets/loyalty/:outletId"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/loyalty/:outletId'."
      parameters:
        - name: "outletId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/loyalty/:outletId"
  "/v1/retailOutlets/spendsphere/outlet":
    get:
      tags:
        - "retail-outlet"
      summary: "GET /v1/retailOutlets/spendsphere/outlet"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/spendsphere/outlet'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/spendsphere/outlet"
  "/v1/retailOutlets/spendsphere/room/{roomNo}":
    get:
      tags:
        - "retail-outlet"
      summary: "GET /v1/retailOutlets/spendsphere/room/:roomNo"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/spendsphere/room/:roomNo'."
      parameters:
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/spendsphere/room/:roomNo"
  "/v1/retailOutlets/spendsphere/table/assign":
    post:
      tags:
        - "retail-outlet"
      summary: "POST /v1/retailOutlets/spendsphere/table/assign"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/spendsphere/table/assign'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/spendsphere/table/assign"
  "/v1/retailOutlets/spendsphere/table/merge":
    post:
      tags:
        - "retail-outlet"
      summary: "POST /v1/retailOutlets/spendsphere/table/merge"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/spendsphere/table/merge'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/spendsphere/table/merge"
  "/v1/retailOutlets/upload/{id}":
    post:
      tags:
        - "retail-outlet"
      summary: "POST /v1/retailOutlets/upload/:id"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/upload/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/upload/:id"
  "/v1/retailOutlets/{id}":
    delete:
      tags:
        - "retail-outlet"
      summary: "DELETE /v1/retailOutlets/:id"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "retail-outlet"
      summary: "GET /v1/retailOutlets/:id"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "retail-outlet"
      summary: "PUT /v1/retailOutlets/:id"
      description: "Auto-generated from src/routes/retail-outlet.js. Mounted at /v1/retailOutlets with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/retail-outlet.js"
      x-express-mount: "/v1/retailOutlets"
      x-express-sub-path: "/:id"
  "/v1/role/domainRoles":
    get:
      tags:
        - "userType"
      summary: "GET /v1/role/domainRoles"
      description: "Auto-generated from src/routes/userType.js. Mounted at /v1/role with sub-path '/domainRoles'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/userType.js"
      x-express-mount: "/v1/role"
      x-express-sub-path: "/domainRoles"
  "/v1/role/userTypes":
    get:
      tags:
        - "userType"
      summary: "GET /v1/role/userTypes"
      description: "Auto-generated from src/routes/userType.js. Mounted at /v1/role with sub-path '/userTypes'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/userType.js"
      x-express-mount: "/v1/role"
      x-express-sub-path: "/userTypes"
    post:
      tags:
        - "userType"
      summary: "POST /v1/role/userTypes"
      description: "Auto-generated from src/routes/userType.js. Mounted at /v1/role with sub-path '/userTypes'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/userType.js"
      x-express-mount: "/v1/role"
      x-express-sub-path: "/userTypes"
  "/v1/role/userTypes/{id}":
    delete:
      tags:
        - "userType"
      summary: "DELETE /v1/role/userTypes/:id"
      description: "Auto-generated from src/routes/userType.js. Mounted at /v1/role with sub-path '/userTypes/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/userType.js"
      x-express-mount: "/v1/role"
      x-express-sub-path: "/userTypes/:id"
    put:
      tags:
        - "userType"
      summary: "PUT /v1/role/userTypes/:id"
      description: "Auto-generated from src/routes/userType.js. Mounted at /v1/role with sub-path '/userTypes/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/userType.js"
      x-express-mount: "/v1/role"
      x-express-sub-path: "/userTypes/:id"
  "/v1/room":
    delete:
      tags:
        - "rooms"
      summary: "Delete room"
      description: "Deletes a room identified by the `id` query parameter and removes related hub associations."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
          description: "Room primary key to delete."
      responses:
        "200":
          description: "Room deleted successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Missing room id."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/"
    post:
      tags:
        - "rooms"
      summary: "Create room"
      description: "Creates a room (and optionally links a hub) using multipart form data. Images and automation metadata are handled by the controller."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RoomCreateRequest"
      responses:
        "200":
          description: "Room created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Room"
        "422":
          description: "Missing required fields (name, type, roomNo, propertyId)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/"
  "/v1/room/all/{id}":
    get:
      tags:
        - "rooms"
      summary: "List rooms for property"
      description: "Returns all rooms configured under the specified property ID."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Property identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Rooms fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Room"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/all/:id"
  "/v1/room/booking":
    post:
      tags:
        - "rooms"
      summary: "Create room booking"
      description: "Creates an in-room service booking (spa, housekeeping, etc.) for the currently authenticated context."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomBookingRequest"
      responses:
        "200":
          description: "Booking created successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/RoomBooking"
        "422":
          description: "Missing required booking fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking"
  "/v1/room/booking/all/room/{roomId}":
    get:
      tags:
        - "rooms"
      summary: "List bookings by room"
      description: "Returns bookings for a specific room ID."
      security:
        - SessionToken: []
      parameters:
        - name: "roomId"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Bookings returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RoomBooking"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking/all/room/:roomId"
  "/v1/room/booking/all/{propertyId}":
    get:
      tags:
        - "rooms"
      summary: "List bookings by property"
      description: "Returns bookings across all rooms for the given property."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Property identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Bookings returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RoomBooking"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking/all/:propertyId"
  "/v1/room/booking/{id}":
    delete:
      tags:
        - "rooms"
      summary: "Delete booking"
      description: "Cancels a booking and frees associated slots."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Booking identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Booking cancelled successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Invalid booking id."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking/:id"
    get:
      tags:
        - "rooms"
      summary: "Get booking"
      description: "Fetches booking details and associated metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Booking identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Booking fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/RoomBooking"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking/:id"
    put:
      tags:
        - "rooms"
      summary: "Update booking"
      description: "Modifies an existing booking (time, status, guest count)."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Booking identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomBookingUpdateRequest"
      responses:
        "200":
          description: "Booking updated successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/RoomBooking"
        "400":
          description: "Invalid booking id."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/booking/:id"
  "/v1/room/checkin":
    post:
      tags:
        - "rooms"
      summary: "Check in guest"
      description: "Registers a guest check-in, creating a room transaction and associating the device/hub."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReservationEvent"
      responses:
        "200":
          description: "Check-in recorded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "hotelId or bookingId missing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/checkin"
  "/v1/room/checkout":
    post:
      tags:
        - "rooms"
      summary: "Check out guest"
      description: "Marks a guest as checked out, generating a closing room transaction."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReservationEvent"
      responses:
        "200":
          description: "Checkout processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "hotelId or bookingId missing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/checkout"
  "/v1/room/csv":
    post:
      tags:
        - "rooms"
      summary: "Bulk import rooms"
      description: "Uploads a CSV (roomNo, roomType, hubId, etc.) to create or update rooms in bulk for a domain."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - csv
                - propertyId
                - domainName
              properties:
                csv:
                  type: string
                  format: binary
                propertyId:
                  type: integer
                domainName:
                  type: string
      responses:
        "200":
          description: "CSV processed successfully."
          content:
            text/csv:
              schema:
                type: string
        "422":
          description: "Missing propertyId or domainName."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/csv"
  "/v1/room/delink":
    post:
      tags:
        - "rooms"
      summary: "Delink room device"
      description: "Removes the association between a room and its hub/device."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
          description: "Room identifier to delink."
      responses:
        "200":
          description: "Room delinked successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Missing room id."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/delink"
  "/v1/room/guests/all/{id}":
    get:
      tags:
        - "rooms"
      summary: "List guests by hotel"
      description: "Returns all guests currently associated with the given hotel."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Hotel/property identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Guests fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RoomGuest"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/guests/all/:id"
  "/v1/room/guests/{id}":
    get:
      tags:
        - "rooms"
      summary: "List guests by room"
      description: "Returns occupants for a specific room."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Guests fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RoomGuest"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/guests/:id"
  "/v1/room/lightspeed":
    post:
      tags:
        - "rooms"
      summary: "Bulk import table IDs"
      description: "Uploads a CSV containing roomNo and hardwareId to update hub mappings for Lightspeed POS integrations."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - csv
              properties:
                csv:
                  type: string
                  format: binary
      responses:
        "200":
          description: "CSV processed successfully."
          content:
            text/csv:
              schema:
                type: string
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/lightspeed"
  "/v1/room/login":
    post:
      tags:
        - "rooms"
      summary: "Room device login"
      description: "Validates a room/hub combination and returns session details used by in-room clients."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomLoginRequest"
      responses:
        "200":
          description: "Login successful."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/RoomLoginResponse"
        "400":
          description: "Missing propertyId, roomNo, or hubId."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/login"
  "/v1/room/newRoomTransaction":
    post:
      tags:
        - "rooms"
      summary: "Create room transaction"
      description: "Creates a room transaction (typically from Impala PMS events)."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomTransactionRequest"
      responses:
        "200":
          description: "Room transaction created."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Invalid transaction payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/newRoomTransaction"
  "/v1/room/reconciliation":
    post:
      tags:
        - "rooms"
      summary: "Reconcile room transactions"
      description: "Cancels any lingering room transactions for the device/room, typically used after manual adjustments."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReconciliationRequest"
      responses:
        "200":
          description: "Reconciliation completed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "hotelId or roomId missing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/reconciliation"
  "/v1/room/roomsAndPropertySecret/{propertyId}":
    get:
      tags:
        - "rooms"
      summary: "Rooms and property secret"
      description: "Returns room information along with property-level secrets required by in-room clients."
      security:
        - SessionToken: []
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Property identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Rooms and secrets returned."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/roomsAndPropertySecret/:propertyId"
  "/v1/room/services/{id}":
    put:
      tags:
        - "rooms"
      summary: "Update room service settings"
      description: "Updates per-room service metadata (for example housekeeping settings) using a JSON payload."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: "Service toggle payload (see implementation for exact fields)."
      responses:
        "200":
          description: "Room service settings updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Missing room id."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/services/:id"
  "/v1/room/transaction/{booking_status}":
    post:
      tags:
        - "rooms"
      summary: "Xenia booking webhooks"
      description: "Receives booking status changes (checkIn/checkOut) from the X3nia PMS."
      parameters:
        - name: "booking_status"
          in: "path"
          required: true
          description: "Expected values: `checkIn` or `checkOut`."
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/XeniaTransactionRequest"
      responses:
        "200":
          description: "Webhook processed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "422":
          description: "Booking status or room payload missing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/transaction/:booking_status"
  "/v1/room/transactions/{id}":
    get:
      tags:
        - "rooms"
      summary: "List room transactions"
      description: "Returns the transaction history for a specific room."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Transactions returned successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/RoomTransaction"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/transactions/:id"
  "/v1/room/{id}":
    get:
      tags:
        - "rooms"
      summary: "Get room"
      description: "Returns detailed information for a single room, including linked hub and property metadata."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      responses:
        "200":
          description: "Room fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/Room"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "rooms"
      summary: "Update room"
      description: "Updates room metadata, hub assignments, and optional automation overrides using multipart form data."
      security:
        - SessionToken: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Room identifier."
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RoomUpdateRequest"
      responses:
        "200":
          description: "Room updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "422":
          description: "Missing room id or invalid payload."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/rooms.js"
      x-express-mount: "/v1/room"
      x-express-sub-path: "/:id"
  "/v1/roomAutomationService/copy":
    post:
      tags:
        - "roomAutomationService"
      summary: "POST /v1/roomAutomationService/copy"
      description: "Auto-generated from src/routes/roomAutomationService.js. Mounted at /v1/roomAutomationService with sub-path '/copy'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/roomAutomationService.js"
      x-express-mount: "/v1/roomAutomationService"
      x-express-sub-path: "/copy"
  "/v1/roomAutomationService/{propertyId}/{roomId}":
    get:
      tags:
        - "roomAutomationService"
      summary: "GET /v1/roomAutomationService/:propertyId/:roomId"
      description: "Auto-generated from src/routes/roomAutomationService.js. Mounted at /v1/roomAutomationService with sub-path '/:propertyId/:roomId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/roomAutomationService.js"
      x-express-mount: "/v1/roomAutomationService"
      x-express-sub-path: "/:propertyId/:roomId"
    post:
      tags:
        - "roomAutomationService"
      summary: "POST /v1/roomAutomationService/:propertyId/:roomId"
      description: "Auto-generated from src/routes/roomAutomationService.js. Mounted at /v1/roomAutomationService with sub-path '/:propertyId/:roomId'."
      parameters:
        - name: "propertyId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/roomAutomationService.js"
      x-express-mount: "/v1/roomAutomationService"
      x-express-sub-path: "/:propertyId/:roomId"
  "/v1/roomAutomationService/{roomAutomationServiceId}":
    delete:
      tags:
        - "roomAutomationService"
      summary: "DELETE /v1/roomAutomationService/:roomAutomationServiceId"
      description: "Auto-generated from src/routes/roomAutomationService.js. Mounted at /v1/roomAutomationService with sub-path '/:roomAutomationServiceId'."
      parameters:
        - name: "roomAutomationServiceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/roomAutomationService.js"
      x-express-mount: "/v1/roomAutomationService"
      x-express-sub-path: "/:roomAutomationServiceId"
    patch:
      tags:
        - "roomAutomationService"
      summary: "PATCH /v1/roomAutomationService/:roomAutomationServiceId"
      description: "Auto-generated from src/routes/roomAutomationService.js. Mounted at /v1/roomAutomationService with sub-path '/:roomAutomationServiceId'."
      parameters:
        - name: "roomAutomationServiceId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/roomAutomationService.js"
      x-express-mount: "/v1/roomAutomationService"
      x-express-sub-path: "/:roomAutomationServiceId"
  "/v1/routerAuth":
    get:
      tags:
        - "routerAuth"
      summary: "GET /v1/routerAuth"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/"
    post:
      tags:
        - "routerAuth"
      summary: "POST /v1/routerAuth"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/"
    put:
      tags:
        - "routerAuth"
      summary: "PUT /v1/routerAuth"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/"
  "/v1/routerAuth/route":
    get:
      tags:
        - "routerAuth"
      summary: "GET /v1/routerAuth/route"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/route'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/route"
  "/v1/routerAuth/{id}":
    delete:
      tags:
        - "routerAuth"
      summary: "DELETE /v1/routerAuth/:id"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "routerAuth"
      summary: "GET /v1/routerAuth/:id"
      description: "Auto-generated from src/routes/routerAuth.js. Mounted at /v1/routerAuth with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/routerAuth.js"
      x-express-mount: "/v1/routerAuth"
      x-express-sub-path: "/:id"
  "/v1/search/image":
    post:
      tags:
        - "temp"
      summary: "POST /v1/search/image"
      description: "Auto-generated from src/routes/temp.js. Mounted at /v1/search with sub-path '/image'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/temp.js"
      x-express-mount: "/v1/search"
      x-express-sub-path: "/image"
  "/v1/search/ytStream/{id}":
    get:
      tags:
        - "temp"
      summary: "GET /v1/search/ytStream/:id"
      description: "Auto-generated from src/routes/temp.js. Mounted at /v1/search with sub-path '/ytStream/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/temp.js"
      x-express-mount: "/v1/search"
      x-express-sub-path: "/ytStream/:id"
  "/v1/service":
    delete:
      tags:
        - "service"
      summary: "DELETE /v1/service"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/"
    get:
      tags:
        - "service"
      summary: "GET /v1/service"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/"
    post:
      tags:
        - "service"
      summary: "POST /v1/service"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/"
    put:
      tags:
        - "service"
      summary: "PUT /v1/service"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/"
  "/v1/service/all":
    get:
      tags:
        - "service"
      summary: "GET /v1/service/all"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/all"
  "/v1/service/all/{domainId}":
    get:
      tags:
        - "service"
      summary: "GET /v1/service/all/:domainId"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/all/:domainId'."
      parameters:
        - name: "domainId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/all/:domainId"
  "/v1/service/all/{domainId}/{lang}":
    get:
      tags:
        - "service"
      summary: "GET /v1/service/all/:domainId/:lang"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/all/:domainId/:lang'."
      parameters:
        - name: "domainId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "lang"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/all/:domainId/:lang"
  "/v1/service/appStore":
    post:
      tags:
        - "service"
      summary: "POST /v1/service/appStore"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/appStore'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/appStore"
  "/v1/service/deleteSkillImg/{name}":
    delete:
      tags:
        - "service"
      summary: "DELETE /v1/service/deleteSkillImg/:name"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/deleteSkillImg/:name'."
      parameters:
        - name: "name"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/deleteSkillImg/:name"
  "/v1/service/makePublic/{id}":
    put:
      tags:
        - "service"
      summary: "PUT /v1/service/makePublic/:id"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/makePublic/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/makePublic/:id"
  "/v1/service/trainingStatus/{id}":
    get:
      tags:
        - "service"
      summary: "GET /v1/service/trainingStatus/:id"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/trainingStatus/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/trainingStatus/:id"
    put:
      tags:
        - "service"
      summary: "PUT /v1/service/trainingStatus/:id"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/trainingStatus/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/trainingStatus/:id"
  "/v1/service/uploadSkillImg":
    post:
      tags:
        - "service"
      summary: "POST /v1/service/uploadSkillImg"
      description: "Auto-generated from src/routes/service.js. Mounted at /v1/service with sub-path '/uploadSkillImg'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/service.js"
      x-express-mount: "/v1/service"
      x-express-sub-path: "/uploadSkillImg"
  "/v1/sip-configure/room/credentials":
    get:
      tags:
        - "sip-configure"
      summary: "GET /v1/sip-configure/room/credentials"
      description: "Auto-generated from src/routes/sip-configure.js. Mounted at /v1/sip-configure with sub-path '/room/credentials'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/sip-configure.js"
      x-express-mount: "/v1/sip-configure"
      x-express-sub-path: "/room/credentials"
  "/v1/sip-configure/room/{roomId}/credentials":
    get:
      tags:
        - "sip-configure"
      summary: "GET /v1/sip-configure/room/:roomId/credentials"
      description: "Auto-generated from src/routes/sip-configure.js. Mounted at /v1/sip-configure with sub-path '/room/:roomId/credentials'."
      parameters:
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/sip-configure.js"
      x-express-mount: "/v1/sip-configure"
      x-express-sub-path: "/room/:roomId/credentials"
    post:
      tags:
        - "sip-configure"
      summary: "POST /v1/sip-configure/room/:roomId/credentials"
      description: "Auto-generated from src/routes/sip-configure.js. Mounted at /v1/sip-configure with sub-path '/room/:roomId/credentials'."
      parameters:
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/sip-configure.js"
      x-express-mount: "/v1/sip-configure"
      x-express-sub-path: "/room/:roomId/credentials"
  "/v1/sip-configure/room/{roomId}/credentials/{sipId}":
    delete:
      tags:
        - "sip-configure"
      summary: "DELETE /v1/sip-configure/room/:roomId/credentials/:sipId"
      description: "Auto-generated from src/routes/sip-configure.js. Mounted at /v1/sip-configure with sub-path '/room/:roomId/credentials/:sipId'."
      parameters:
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "sipId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/sip-configure.js"
      x-express-mount: "/v1/sip-configure"
      x-express-sub-path: "/room/:roomId/credentials/:sipId"
    patch:
      tags:
        - "sip-configure"
      summary: "PATCH /v1/sip-configure/room/:roomId/credentials/:sipId"
      description: "Auto-generated from src/routes/sip-configure.js. Mounted at /v1/sip-configure with sub-path '/room/:roomId/credentials/:sipId'."
      parameters:
        - name: "roomId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "sipId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/sip-configure.js"
      x-express-mount: "/v1/sip-configure"
      x-express-sub-path: "/room/:roomId/credentials/:sipId"
  "/v1/smartHomeDevice":
    get:
      tags:
        - "smartHomeDevice"
      summary: "GET /v1/smartHomeDevice"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/"
    post:
      tags:
        - "smartHomeDevice"
      summary: "POST /v1/smartHomeDevice"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/"
  "/v1/smartHomeDevice/favorite/{id}":
    put:
      tags:
        - "smartHomeDevice"
      summary: "PUT /v1/smartHomeDevice/favorite/:id"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/favorite/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/favorite/:id"
  "/v1/smartHomeDevice/state/{id}":
    put:
      tags:
        - "smartHomeDevice"
      summary: "PUT /v1/smartHomeDevice/state/:id"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/state/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/state/:id"
  "/v1/smartHomeDevice/{id}":
    delete:
      tags:
        - "smartHomeDevice"
      summary: "DELETE /v1/smartHomeDevice/:id"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "smartHomeDevice"
      summary: "PUT /v1/smartHomeDevice/:id"
      description: "Auto-generated from src/routes/smartHomeDevice.js. Mounted at /v1/smartHomeDevice with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/smartHomeDevice.js"
      x-express-mount: "/v1/smartHomeDevice"
      x-express-sub-path: "/:id"
  "/v1/spendsphere":
    get:
      tags:
        - "spendsphere"
      summary: "GET /v1/spendsphere"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/"
    post:
      tags:
        - "spendsphere"
      summary: "POST /v1/spendsphere"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/"
  "/v1/spendsphere/form":
    post:
      tags:
        - "spendsphere"
      summary: "POST /v1/spendsphere/form"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/form'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/form"
  "/v1/spendsphere/form/{id}":
    delete:
      tags:
        - "spendsphere"
      summary: "DELETE /v1/spendsphere/form/:id"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/form/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/form/:id"
    get:
      tags:
        - "spendsphere"
      summary: "GET /v1/spendsphere/form/:id"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/form/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/form/:id"
    put:
      tags:
        - "spendsphere"
      summary: "PUT /v1/spendsphere/form/:id"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/form/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/form/:id"
  "/v1/spendsphere/forms":
    get:
      tags:
        - "spendsphere"
      summary: "GET /v1/spendsphere/forms"
      description: "Auto-generated from src/routes/spendsphere.js. Mounted at /v1/spendsphere with sub-path '/forms'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere.js"
      x-express-mount: "/v1/spendsphere"
      x-express-sub-path: "/forms"
  "/v1/spendsphereAdmin":
    get:
      tags:
        - "spendsphere-admin"
      summary: "GET /v1/spendsphereAdmin"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/"
    post:
      tags:
        - "spendsphere-admin"
      summary: "POST /v1/spendsphereAdmin"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/"
  "/v1/spendsphereAdmin/login":
    post:
      tags:
        - "spendsphere-admin"
      summary: "POST /v1/spendsphereAdmin/login"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/login'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/login"
  "/v1/spendsphereAdmin/upload/{id}":
    post:
      tags:
        - "spendsphere-admin"
      summary: "POST /v1/spendsphereAdmin/upload/:id"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/upload/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/upload/:id"
  "/v1/spendsphereAdmin/{id}":
    delete:
      tags:
        - "spendsphere-admin"
      summary: "DELETE /v1/spendsphereAdmin/:id"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "spendsphere-admin"
      summary: "GET /v1/spendsphereAdmin/:id"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "spendsphere-admin"
      summary: "PUT /v1/spendsphereAdmin/:id"
      description: "Auto-generated from src/routes/spendsphere-admin.js. Mounted at /v1/spendsphereAdmin with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spendsphere-admin.js"
      x-express-mount: "/v1/spendsphereAdmin"
      x-express-sub-path: "/:id"
  "/v1/spotify":
    delete:
      tags:
        - "spotify"
      summary: "DELETE /v1/spotify"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/"
    get:
      tags:
        - "spotify"
      summary: "GET /v1/spotify"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/"
    post:
      tags:
        - "spotify"
      summary: "POST /v1/spotify"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/"
  "/v1/spotify/auth":
    get:
      tags:
        - "spotify"
      summary: "GET /v1/spotify/auth"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/auth'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/auth"
  "/v1/spotify/code":
    get:
      tags:
        - "spotify"
      summary: "GET /v1/spotify/code"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/code'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/code"
  "/v1/spotify/search":
    post:
      tags:
        - "spotify"
      summary: "POST /v1/spotify/search"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/search'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/search"
  "/v1/spotify/status":
    get:
      tags:
        - "spotify"
      summary: "GET /v1/spotify/status"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/status'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/status"
  "/v1/spotify/topCharts":
    get:
      tags:
        - "spotify"
      summary: "GET /v1/spotify/topCharts"
      description: "Auto-generated from src/routes/spotify.js. Mounted at /v1/spotify with sub-path '/topCharts'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/spotify.js"
      x-express-mount: "/v1/spotify"
      x-express-sub-path: "/topCharts"
  "/v1/superAdmin/amadeus":
    delete:
      tags:
        - "super-admin-hub"
      summary: "DELETE /v1/superAdmin/amadeus"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/amadeus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/amadeus"
    get:
      tags:
        - "super-admin-hub"
      summary: "GET /v1/superAdmin/amadeus"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/amadeus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/amadeus"
    post:
      tags:
        - "super-admin-hub"
      summary: "POST /v1/superAdmin/amadeus"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/amadeus'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/amadeus"
  "/v1/superAdmin/amadeus/{id}":
    put:
      tags:
        - "super-admin-hub"
      summary: "PUT /v1/superAdmin/amadeus/:id"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/amadeus/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/amadeus/:id"
  "/v1/superAdmin/hub":
    post:
      tags:
        - "super-admin-hub"
      summary: "POST /v1/superAdmin/hub"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/hub'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/hub"
    put:
      tags:
        - "super-admin-hub"
      summary: "PUT /v1/superAdmin/hub"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/hub'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/hub"
  "/v1/superAdmin/hub/{hubId}/{userId}":
    delete:
      tags:
        - "super-admin-hub"
      summary: "DELETE /v1/superAdmin/hub/:hubId/:userId"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/hub/:hubId/:userId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "userId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/hub/:hubId/:userId"
  "/v1/superAdmin/hubs":
    get:
      tags:
        - "super-admin-hub"
      summary: "GET /v1/superAdmin/hubs"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/hubs'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/hubs"
  "/v1/superAdmin/hubs/{domainId}":
    get:
      tags:
        - "super-admin-hub"
      summary: "GET /v1/superAdmin/hubs/:domainId"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/hubs/:domainId'."
      parameters:
        - name: "domainId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/hubs/:domainId"
  "/v1/superAdmin/interel":
    delete:
      tags:
        - "super-admin-hub"
      summary: "DELETE /v1/superAdmin/interel"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/interel'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/interel"
    get:
      tags:
        - "super-admin-hub"
      summary: "GET /v1/superAdmin/interel"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/interel'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/interel"
    post:
      tags:
        - "super-admin-hub"
      summary: "POST /v1/superAdmin/interel"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/interel'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/interel"
  "/v1/superAdmin/interel/{id}":
    put:
      tags:
        - "super-admin-hub"
      summary: "PUT /v1/superAdmin/interel/:id"
      description: "Auto-generated from src/routes/super-admin-hub.js. Mounted at /v1/superAdmin with sub-path '/interel/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/super-admin-hub.js"
      x-express-mount: "/v1/superAdmin"
      x-express-sub-path: "/interel/:id"
  "/v1/surveillance/{hubId}":
    post:
      tags:
        - "surveillance"
      summary: "POST /v1/surveillance/:hubId"
      description: "Auto-generated from src/routes/surveillance.js. Mounted at /v1/surveillance with sub-path '/:hubId'."
      parameters:
        - name: "hubId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/surveillance.js"
      x-express-mount: "/v1/surveillance"
      x-express-sub-path: "/:hubId"
  "/v1/systemUpdate":
    post:
      tags:
        - "systemUpdate"
      summary: "POST /v1/systemUpdate"
      description: "Auto-generated from src/routes/systemUpdate.js. Mounted at /v1/systemUpdate with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/systemUpdate.js"
      x-express-mount: "/v1/systemUpdate"
      x-express-sub-path: "/"
  "/v1/tablecheck":
    post:
      tags:
        - "tablecheck"
      summary: "POST /v1/tablecheck"
      description: "Auto-generated from src/routes/tablecheck.js. Mounted at /v1/tablecheck with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tablecheck.js"
      x-express-mount: "/v1/tablecheck"
      x-express-sub-path: "/"
  "/v1/tablecheck/dates/{id}":
    get:
      tags:
        - "tablecheck"
      summary: "GET /v1/tablecheck/dates/:id"
      description: "Auto-generated from src/routes/tablecheck.js. Mounted at /v1/tablecheck with sub-path '/dates/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tablecheck.js"
      x-express-mount: "/v1/tablecheck"
      x-express-sub-path: "/dates/:id"
  "/v1/tablecheck/reservations/{id}":
    get:
      tags:
        - "tablecheck"
      summary: "GET /v1/tablecheck/reservations/:id"
      description: "Auto-generated from src/routes/tablecheck.js. Mounted at /v1/tablecheck with sub-path '/reservations/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tablecheck.js"
      x-express-mount: "/v1/tablecheck"
      x-express-sub-path: "/reservations/:id"
  "/v1/tablecheck/slots/{id}/{date}":
    get:
      tags:
        - "tablecheck"
      summary: "GET /v1/tablecheck/slots/:id/:date"
      description: "Auto-generated from src/routes/tablecheck.js. Mounted at /v1/tablecheck with sub-path '/slots/:id/:date'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "date"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tablecheck.js"
      x-express-mount: "/v1/tablecheck"
      x-express-sub-path: "/slots/:id/:date"
  "/v1/tables":
    post:
      tags:
        - "outlet-tables"
      summary: "POST /v1/tables"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/"
  "/v1/tables/allDateSlots/{id}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/allDateSlots/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/allDateSlots/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/allDateSlots/:id"
  "/v1/tables/allSlots/{id}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/allSlots/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/allSlots/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/allSlots/:id"
  "/v1/tables/allSlots/{id}/{date}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/allSlots/:id/:date"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/allSlots/:id/:date'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "date"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/allSlots/:id/:date"
  "/v1/tables/booking":
    post:
      tags:
        - "outlet-tables"
      summary: "POST /v1/tables/booking"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/booking'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/booking"
  "/v1/tables/booking/cancel":
    delete:
      tags:
        - "outlet-tables"
      summary: "DELETE /v1/tables/booking/cancel"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/booking/cancel'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/booking/cancel"
  "/v1/tables/bookings/all":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/bookings/all"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/bookings/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/bookings/all"
  "/v1/tables/change":
    post:
      tags:
        - "outlet-tables"
      summary: "POST /v1/tables/change"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/change'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/change"
  "/v1/tables/custom":
    post:
      tags:
        - "outlet-tables"
      summary: "POST /v1/tables/custom"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/custom'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/custom"
  "/v1/tables/merge":
    post:
      tags:
        - "outlet-tables"
      summary: "POST /v1/tables/merge"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/merge'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/merge"
  "/v1/tables/sizes/{id}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/sizes/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/sizes/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/sizes/:id"
  "/v1/tables/slots/{id}/{date}/{size}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/slots/:id/:date/:size"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/slots/:id/:date/:size'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "date"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "size"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/slots/:id/:date/:size"
  "/v1/tables/slots/{id}/{size}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/slots/:id/:size"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/slots/:id/:size'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
        - name: "size"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/slots/:id/:size"
  "/v1/tables/spendsphere/bookings/all":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/bookings/all"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/bookings/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/bookings/all"
  "/v1/tables/spendsphere/bookings/all/{outletId}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/bookings/all/:outletId"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/bookings/all/:outletId'."
      parameters:
        - name: "outletId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/bookings/all/:outletId"
  "/v1/tables/spendsphere/bookings/room/{roomNo}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/bookings/room/:roomNo"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/bookings/room/:roomNo'."
      parameters:
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/bookings/room/:roomNo"
  "/v1/tables/spendsphere/ongoingbookings/room/{roomNo}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/ongoingbookings/room/:roomNo"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/ongoingbookings/room/:roomNo'."
      parameters:
        - name: "roomNo"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/ongoingbookings/room/:roomNo"
  "/v1/tables/spendsphere/table/{id}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/table/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/table/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/table/:id"
  "/v1/tables/spendsphere/{id}":
    delete:
      tags:
        - "outlet-tables"
      summary: "DELETE /v1/tables/spendsphere/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/:id"
  "/v1/tables/spendsphere/{outletId}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/spendsphere/:outletId"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/spendsphere/:outletId'."
      parameters:
        - name: "outletId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/spendsphere/:outletId"
  "/v1/tables/{id}":
    delete:
      tags:
        - "outlet-tables"
      summary: "DELETE /v1/tables/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "outlet-tables"
      summary: "PUT /v1/tables/:id"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/:id"
  "/v1/tables/{outletId}":
    get:
      tags:
        - "outlet-tables"
      summary: "GET /v1/tables/:outletId"
      description: "Auto-generated from src/routes/outlet-tables.js. Mounted at /v1/tables with sub-path '/:outletId'."
      parameters:
        - name: "outletId"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/outlet-tables.js"
      x-express-mount: "/v1/tables"
      x-express-sub-path: "/:outletId"
  "/v1/telecom":
    post:
      tags:
        - "telecom"
      summary: "POST /v1/telecom"
      description: "Auto-generated from src/routes/telecom.js. Mounted at /v1/telecom with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/telecom.js"
      x-express-mount: "/v1/telecom"
      x-express-sub-path: "/"
  "/v1/telecom/mobile-numbers":
    get:
      tags:
        - "telecom"
      summary: "GET /v1/telecom/mobile-numbers"
      description: "Auto-generated from src/routes/telecom.js. Mounted at /v1/telecom with sub-path '/mobile-numbers'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/telecom.js"
      x-express-mount: "/v1/telecom"
      x-express-sub-path: "/mobile-numbers"
  "/v1/telecom/packages":
    get:
      tags:
        - "telecom"
      summary: "GET /v1/telecom/packages"
      description: "Auto-generated from src/routes/telecom.js. Mounted at /v1/telecom with sub-path '/packages'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/telecom.js"
      x-express-mount: "/v1/telecom"
      x-express-sub-path: "/packages"
  "/v1/telecom/save-email":
    post:
      tags:
        - "telecom"
      summary: "POST /v1/telecom/save-email"
      description: "Auto-generated from src/routes/telecom.js. Mounted at /v1/telecom with sub-path '/save-email'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/telecom.js"
      x-express-mount: "/v1/telecom"
      x-express-sub-path: "/save-email"
  "/v1/telecom/verify-email":
    post:
      tags:
        - "telecom"
      summary: "POST /v1/telecom/verify-email"
      description: "Auto-generated from src/routes/telecom.js. Mounted at /v1/telecom with sub-path '/verify-email'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/telecom.js"
      x-express-mount: "/v1/telecom"
      x-express-sub-path: "/verify-email"
  "/v1/temp":
    get:
      tags:
        - "ping"
      summary: "GET /v1/temp"
      description: "Auto-generated from src/routes/ping.js. Mounted at /v1 with sub-path '/temp'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/ping.js"
      x-express-mount: "/v1"
      x-express-sub-path: "/temp"
  "/v1/thingsToSay":
    get:
      tags:
        - "thingsToSay"
      summary: "GET /v1/thingsToSay"
      description: "Auto-generated from src/routes/thingsToSay.js. Mounted at /v1/thingsToSay with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/thingsToSay.js"
      x-express-mount: "/v1/thingsToSay"
      x-express-sub-path: "/"
    post:
      tags:
        - "thingsToSay"
      summary: "POST /v1/thingsToSay"
      description: "Auto-generated from src/routes/thingsToSay.js. Mounted at /v1/thingsToSay with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/thingsToSay.js"
      x-express-mount: "/v1/thingsToSay"
      x-express-sub-path: "/"
  "/v1/todo":
    delete:
      tags:
        - "todo"
      summary: "DELETE /v1/todo"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/"
    get:
      tags:
        - "todo"
      summary: "GET /v1/todo"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/"
    post:
      tags:
        - "todo"
      summary: "POST /v1/todo"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/"
  "/v1/todo/{id}":
    delete:
      tags:
        - "todo"
      summary: "DELETE /v1/todo/:id"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/:id"
    get:
      tags:
        - "todo"
      summary: "GET /v1/todo/:id"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/:id"
    post:
      tags:
        - "todo"
      summary: "POST /v1/todo/:id"
      description: "Auto-generated from src/routes/todo.js. Mounted at /v1/todo with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/todo.js"
      x-express-mount: "/v1/todo"
      x-express-sub-path: "/:id"
  "/v1/topApps":
    delete:
      tags:
        - "topApps"
      summary: "DELETE /v1/topApps"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/"
    get:
      tags:
        - "topApps"
      summary: "GET /v1/topApps"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/"
    post:
      tags:
        - "topApps"
      summary: "POST /v1/topApps"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/"
  "/v1/topApps/sequence":
    post:
      tags:
        - "topApps"
      summary: "POST /v1/topApps/sequence"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/sequence'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/sequence"
  "/v1/topApps/{id}":
    get:
      tags:
        - "topApps"
      summary: "GET /v1/topApps/:id"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/:id"
    put:
      tags:
        - "topApps"
      summary: "PUT /v1/topApps/:id"
      description: "Auto-generated from src/routes/topApps.js. Mounted at /v1/topApps with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/topApps.js"
      x-express-mount: "/v1/topApps"
      x-express-sub-path: "/:id"
  "/v1/tourism/categories":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/categories"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/categories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/categories"
  "/v1/tourism/content":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/content"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/content'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/content"
  "/v1/tourism/dubai/categories":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/dubai/categories"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/dubai/categories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/dubai/categories"
  "/v1/tourism/dubai/products":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/dubai/products"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/dubai/products'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/dubai/products"
  "/v1/tourism/nearby":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/nearby"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/nearby'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/nearby"
  "/v1/tourism/saudi/events":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/saudi/events"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/saudi/events'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/saudi/events"
  "/v1/tourism/saudi/experiances":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/saudi/experiances"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/saudi/experiances'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/saudi/experiances"
  "/v1/tourism/saudi/experience/{id}":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/saudi/experience/:id"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/saudi/experience/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/saudi/experience/:id"
  "/v1/tourism/saudi/{category}":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/saudi/:category"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/saudi/:category'."
      parameters:
        - name: "category"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/saudi/:category"
  "/v1/tourism/subcategories":
    get:
      tags:
        - "tourism"
      summary: "GET /v1/tourism/subcategories"
      description: "Auto-generated from src/routes/tourism.js. Mounted at /v1/tourism with sub-path '/subcategories'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tourism.js"
      x-express-mount: "/v1/tourism"
      x-express-sub-path: "/subcategories"
  "/v1/tvcontrol/action":
    post:
      tags:
        - "tv-control"
      summary: "POST /v1/tvcontrol/action"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/action'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/action"
  "/v1/tvcontrol/action/{id}":
    delete:
      tags:
        - "tv-control"
      summary: "DELETE /v1/tvcontrol/action/:id"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/action/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/action/:id"
    put:
      tags:
        - "tv-control"
      summary: "PUT /v1/tvcontrol/action/:id"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/action/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/action/:id"
  "/v1/tvcontrol/actions":
    get:
      tags:
        - "tv-control"
      summary: "GET /v1/tvcontrol/actions"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/actions'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/actions"
  "/v1/tvcontrol/control":
    post:
      tags:
        - "tv-control"
      summary: "POST /v1/tvcontrol/control"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/control'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/control"
  "/v1/tvcontrol/mapRooms":
    post:
      tags:
        - "tv-control"
      summary: "POST /v1/tvcontrol/mapRooms"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/mapRooms'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/mapRooms"
  "/v1/tvcontrol/mapRooms/{id}":
    delete:
      tags:
        - "tv-control"
      summary: "DELETE /v1/tvcontrol/mapRooms/:id"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/mapRooms/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/mapRooms/:id"
    put:
      tags:
        - "tv-control"
      summary: "PUT /v1/tvcontrol/mapRooms/:id"
      description: "Auto-generated from src/routes/tv-control.js. Mounted at /v1/tvcontrol with sub-path '/mapRooms/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/tv-control.js"
      x-express-mount: "/v1/tvcontrol"
      x-express-sub-path: "/mapRooms/:id"
  "/v1/user":
    get:
      tags:
        - "user"
      summary: "Get current user profile"
      description: "Returns the profile associated with the bearer token. Implemented through UserController.getUserById."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Profile fetched."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/"
    post:
      tags:
        - "user"
      summary: "Register a new user"
      description: "Creates an enterprise user and sends an email verification link. Implemented through UserController.signUp."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpRequest"
      responses:
        "200":
          description: "User created and verification email sent."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
        "400":
          description: "Validation failed (email exists or password too short)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Unexpected error while creating the user."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/"
    put:
      tags:
        - "user"
      summary: "Update current user profile"
      description: "Updates mutable profile attributes (password, name, preferences). Email cannot be changed. Implemented through UserController.updateUser."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: "Profile updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Password length is shorter than 8 characters."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Attempted to update a restricted field (e.g., email)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/"
  "/v1/user/adminEmail":
    put:
      tags:
        - "user"
      summary: "PUT /v1/user/adminEmail"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/adminEmail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/adminEmail"
  "/v1/user/all":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/all"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/all'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/all"
  "/v1/user/assign/{id}":
    put:
      tags:
        - "user"
      summary: "PUT /v1/user/assign/:id"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/assign/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/assign/:id"
  "/v1/user/consumer":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/consumer"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/consumer'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/consumer"
    put:
      tags:
        - "user"
      summary: "PUT /v1/user/consumer"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/consumer'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/consumer"
  "/v1/user/domainAdmin":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/domainAdmin"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/domainAdmin'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/domainAdmin"
  "/v1/user/email/{email}":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/email/:email"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/email/:email'."
      parameters:
        - name: "email"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/email/:email"
  "/v1/user/forgot/password":
    post:
      tags:
        - "user"
      summary: "Begin password reset flow"
      description: "Sends a one-time passcode to the user's registered email and recovery email. Implemented via UserController.forgotPassword."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
      responses:
        "200":
          description: "OTP sent to registered addresses."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "500":
          description: "Failed to send OTP email."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/forgot/password"
  "/v1/user/forgot/pin":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/forgot/pin"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/forgot/pin'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/forgot/pin"
  "/v1/user/getLoc/{ip}":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/getLoc/:ip"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/getLoc/:ip'."
      parameters:
        - name: "ip"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/getLoc/:ip"
    put:
      tags:
        - "user"
      summary: "PUT /v1/user/getLoc/:ip"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/getLoc/:ip'."
      parameters:
        - name: "ip"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/getLoc/:ip"
  "/v1/user/hubs":
    get:
      tags:
        - "user"
      summary: "List hubs assigned to the current user"
      description: "Returns hub metadata merged from SQL and Mongo stores. Implemented via HubController.getAllHubsBelongsToAUser."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "Hubs fetched successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Hub"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/hubs"
  "/v1/user/login":
    post:
      tags:
        - "user"
      summary: "Authenticate a user"
      description: "Validates credentials/device and returns a session token plus refresh token. Implemented via UserController.login."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "Login successful."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/LoginResponseData"
        "401":
          description: "Invalid username/password."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: "Required fields missing (userName, password/deviceId)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/login"
  "/v1/user/logout":
    post:
      tags:
        - "user"
      summary: "Terminate current session"
      description: "Clears the session token and related hub state in Redis. Implemented via UserController.logout."
      security:
        - SessionToken: []
      responses:
        "200":
          description: "User logout successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/logout"
  "/v1/user/logoutMandatory":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/logoutMandatory"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/logoutMandatory'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/logoutMandatory"
  "/v1/user/pin":
    put:
      tags:
        - "user"
      summary: "Create or update user PIN"
      description: "Sets a 4-digit PIN or clears it after validating the old value. Implemented via UserController.updatePin."
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePinRequest"
      responses:
        "200":
          description: "PIN updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Validation failed (incorrect old PIN or wrong length)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Missing or invalid session token."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/pin"
  "/v1/user/profilePicture":
    delete:
      tags:
        - "user"
      summary: "DELETE /v1/user/profilePicture"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/profilePicture'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/profilePicture"
    put:
      tags:
        - "user"
      summary: "PUT /v1/user/profilePicture"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/profilePicture'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/profilePicture"
  "/v1/user/refreshToken":
    post:
      tags:
        - "user"
      summary: "Issue new session token"
      description: "Exchanges a refresh token for a fresh session/refresh pair. Implemented via UserController.getNewSessionToken."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: "New token pair issued."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/RefreshTokenResponseData"
        "400":
          description: "Refresh token invalid or expired."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Refresh token session not found; login required."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/refreshToken"
  "/v1/user/refreshTokenWeb":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/refreshTokenWeb"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/refreshTokenWeb'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/refreshTokenWeb"
  "/v1/user/resend/email":
    post:
      tags:
        - "user"
      summary: "Resend verification email"
      description: "Triggers another verification email to the specified address. Implemented via UserController.resendVerificationMail."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendVerificationRequest"
      responses:
        "200":
          description: "Verification email resent."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "422":
          description: "Email missing from request body."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/resend/email"
  "/v1/user/reset/password":
    post:
      tags:
        - "user"
      summary: "Complete password reset"
      description: "Resets the password using the token returned from /user/verify/otp. Implemented via UserController.resetPassword."
      parameters:
        - name: "forgotPasswordToken"
          in: "header"
          required: true
          description: "Token issued after OTP verification."
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        "200":
          description: "Password reset successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Token invalid/expired or new password matches old password."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Unexpected error while resetting password."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/reset/password"
  "/v1/user/reset/pin":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/reset/pin"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/reset/pin'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/reset/pin"
  "/v1/user/resetPassword":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/resetPassword"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/resetPassword'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/resetPassword"
  "/v1/user/send/otp":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/send/otp"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/send/otp'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/send/otp"
  "/v1/user/verify/domainAdminEmail":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/verify/domainAdminEmail"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/verify/domainAdminEmail'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/verify/domainAdminEmail"
  "/v1/user/verify/email":
    get:
      tags:
        - "user"
      summary: "GET /v1/user/verify/email"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/verify/email'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/verify/email"
  "/v1/user/verify/mobileNumber":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/verify/mobileNumber"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/verify/mobileNumber'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/verify/mobileNumber"
  "/v1/user/verify/otp":
    post:
      tags:
        - "user"
      summary: "Verify password reset OTP"
      description: "Validates the OTP from /user/forgot/password and issues a short-lived token. Implemented via UserController.verifyForgotPasswordOTP."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOtpRequest"
      responses:
        "200":
          description: "OTP verification result."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/VerifyOtpResponse"
        "400":
          description: "OTP expired or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/verify/otp"
  "/v1/user/verify/pin/otp":
    post:
      tags:
        - "user"
      summary: "POST /v1/user/verify/pin/otp"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/verify/pin/otp'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/verify/pin/otp"
  "/v1/user/{id}":
    delete:
      tags:
        - "user"
      summary: "DELETE /v1/user/:id"
      description: "Auto-generated from src/routes/user.js. Mounted at /v1/user with sub-path '/:id'."
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "Path parameter derived from Express route."
          schema:
            type: "string"
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/user.js"
      x-express-mount: "/v1/user"
      x-express-sub-path: "/:id"
  "/v1/version":
    get:
      tags:
        - "version"
      summary: "GET /v1/version"
      description: "Auto-generated from src/routes/version.js. Mounted at /v1/version with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/version.js"
      x-express-mount: "/v1/version"
      x-express-sub-path: "/"
    post:
      tags:
        - "version"
      summary: "POST /v1/version"
      description: "Auto-generated from src/routes/version.js. Mounted at /v1/version with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/version.js"
      x-express-mount: "/v1/version"
      x-express-sub-path: "/"
  "/v1/version/domain":
    post:
      tags:
        - "version"
      summary: "POST /v1/version/domain"
      description: "Auto-generated from src/routes/version.js. Mounted at /v1/version with sub-path '/domain'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/version.js"
      x-express-mount: "/v1/version"
      x-express-sub-path: "/domain"
  "/v1/version/upload/apk":
    post:
      tags:
        - "version"
      summary: "POST /v1/version/upload/apk"
      description: "Auto-generated from src/routes/version.js. Mounted at /v1/version with sub-path '/upload/apk'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/version.js"
      x-express-mount: "/v1/version"
      x-express-sub-path: "/upload/apk"
  "/v1/weather":
    post:
      tags:
        - "weather"
      summary: "POST /v1/weather"
      description: "Auto-generated from src/routes/weather.js. Mounted at /v1/weather with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/weather.js"
      x-express-mount: "/v1/weather"
      x-express-sub-path: "/"
  "/v1/weather/latlong":
    get:
      tags:
        - "weather"
      summary: "GET /v1/weather/latlong"
      description: "Auto-generated from src/routes/weather.js. Mounted at /v1/weather with sub-path '/latlong'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/weather.js"
      x-express-mount: "/v1/weather"
      x-express-sub-path: "/latlong"
  "/v1/wolfram":
    post:
      tags:
        - "wolfram"
      summary: "POST /v1/wolfram"
      description: "Auto-generated from src/routes/wolfram.js. Mounted at /v1/wolfram with sub-path '/'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/wolfram.js"
      x-express-mount: "/v1/wolfram"
      x-express-sub-path: "/"
  "/v1/youtube/search":
    post:
      tags:
        - "youtube"
      summary: "POST /v1/youtube/search"
      description: "Auto-generated from src/routes/youtube.js. Mounted at /v1/youtube with sub-path '/search'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/youtube.js"
      x-express-mount: "/v1/youtube"
      x-express-sub-path: "/search"
  "/v1/zoom/accessToken":
    post:
      tags:
        - "zoom"
      summary: "POST /v1/zoom/accessToken"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/accessToken'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/accessToken"
  "/v1/zoom/createMeeting":
    post:
      tags:
        - "zoom"
      summary: "POST /v1/zoom/createMeeting"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/createMeeting'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/createMeeting"
  "/v1/zoom/dashboard":
    get:
      tags:
        - "zoom"
      summary: "GET /v1/zoom/dashboard"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/dashboard'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/dashboard"
  "/v1/zoom/join":
    get:
      tags:
        - "zoom"
      summary: "GET /v1/zoom/join"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/join'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/join"
  "/v1/zoom/me":
    post:
      tags:
        - "zoom"
      summary: "POST /v1/zoom/me"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/me'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/me"
  "/v1/zoom/meetings":
    post:
      tags:
        - "zoom"
      summary: "POST /v1/zoom/meetings"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/meetings'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/meetings"
  "/v1/zoom/refreshToken":
    post:
      tags:
        - "zoom"
      summary: "POST /v1/zoom/refreshToken"
      description: "Auto-generated from src/routes/zoom.js. Mounted at /v1/zoom with sub-path '/refreshToken'."
      responses:
        "200":
          description: "Success response (see service implementation for full contract)."
      x-source-file: "src/routes/zoom.js"
      x-express-mount: "/v1/zoom"
      x-express-sub-path: "/refreshToken"
components:
  securitySchemes:
    SessionToken:
      type: apiKey
      in: header
      name: Authorization
      description: "Session token issued by /v1/user/login or /v1/user/refreshToken."
  schemas:
    PingResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: string
          example: pong
    SuccessResponse:
      type: object
      required:
        - status
        - message
        - data
        - error
      properties:
        status:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: "Operation completed."
        data:
          description: "Operation-specific payload."
          nullable: true
        error:
          type: string
          example: ""
    ErrorResponse:
      type: object
      required:
        - status
        - message
        - error
        - data
      properties:
        status:
          type: integer
          format: int32
          example: 400
        message:
          type: string
        error:
          type: string
        data:
          description: "Auxiliary data, usually null."
          nullable: true
    User:
      type: object
      description: "User record stored in Postgres."
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        mobileNumber:
          type: string
        recoveryEmail:
          type: string
          format: email
        isEmailVerified:
          type: boolean
        isMobileNumberVerified:
          type: boolean
        isFirstTimeLogin:
          type: boolean
        image:
          type: string
        userTypeId:
          type: integer
        lastLogin:
          type: string
          format: date-time
        domainId:
          type: integer
          nullable: true
    UserSignUpRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
        - userTypeId
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        userTypeId:
          type: integer
        mobileNumber:
          type: string
        recoveryEmail:
          type: string
          format: email
    UserUpdateRequest:
      type: object
      description: "Mutable fields when updating the current user."
      properties:
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          minLength: 8
        mobileNumber:
          type: string
        recoveryEmail:
          type: string
          format: email
        dob:
          type: string
          format: date
        distanceUnit:
          type: string
          enum: [m, km, miles]
        temperatureUnit:
          type: string
          enum: [C, F, K]
        image:
          type: string
    LoginRequest:
      type: object
      required:
        - userName
        - deviceId
      properties:
        userName:
          type: string
          description: "Email or mobile number."
        password:
          type: string
          minLength: 8
        deviceId:
          oneOf:
            - type: integer
            - type: string
        isPasswordMatched:
          type: boolean
        authType:
          type: string
        domainId:
          type: integer
        accessType:
          type: string
        hotelId:
          type: integer
          nullable: true
        infrasysUrl:
          type: string
          nullable: true
    LoginResponseData:
      type: object
      properties:
        userType:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        status:
          type: string
          example: "authorized"
        id:
          type: integer
        email:
          type: string
        image:
          type: string
        sessionToken:
          type: string
        expiresIn:
          type: string
          example: "24h"
        refreshToken:
          type: string
        isLogin:
          type: string
          example: "true"
        accessType:
          type: string
        hotelId:
          type: integer
          nullable: true
        domainId:
          type: integer
          nullable: true
        infrasysUrl:
          type: string
          nullable: true
        accesssInfo:
          type: object
          properties:
            permissions:
              type: object
            roleType:
              type: string
            label:
              type: string
        language:
          description: "Locale object looked up from localeModel."
        domainData:
          description: "Domain metadata included for admins."
    RefreshTokenRequest:
      type: object
      required:
        - userId
        - userTypeId
        - refreshToken
        - deviceId
      properties:
        userId:
          type: integer
        userTypeId:
          type: integer
        refreshToken:
          type: string
        deviceId:
          oneOf:
            - type: integer
            - type: string
    RefreshTokenResponseData:
      type: object
      required:
        - sessionToken
        - refreshToken
        - expiresIn
      properties:
        sessionToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: string
          example: "24h"
    ForgotPasswordRequest:
      type: object
      required:
        - userName
      properties:
        userName:
          type: string
          description: "Email or mobile number to reset."
    VerifyOtpRequest:
      type: object
      required:
        - userName
        - OTP
      properties:
        userName:
          type: string
        OTP:
          type: string
          minLength: 4
          maxLength: 4
    VerifyOtpResponse:
      type: object
      properties:
        matched:
          type: boolean
        forgotPasswordToken:
          type: string
          description: "Token valid for 5 minutes when OTP matches."
    ResetPasswordRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
        password:
          type: string
          minLength: 8
    ResendVerificationRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    UpdatePinRequest:
      type: object
      properties:
        pin:
          type: string
          minLength: 4
          maxLength: 4
          description: "New PIN value. Provide empty string to clear the PIN."
        oldPin:
          type: string
          minLength: 4
          maxLength: 4
          description: "Required when updating an existing PIN."
    Hub:
      type: object
      description: "Combined hub metadata gathered from Postgres and Mongo."
      properties:
        id:
          type: integer
        name:
          type: string
        macAddress:
          type: string
        ipAddress:
          type: string
        aiEngine:
          type: string
        wifiName:
          type: string
        locale:
          type: string
        timeZone:
          type: string
        lat:
          type: number
          format: double
          nullable: true
        long:
          type: number
          format: double
          nullable: true
        appVersion:
          type: string
        firmwareVersion:
          type: string
        liveFeedAccess:
          type: boolean
        surveillanceMode:
          type: boolean
        connected:
          type: boolean
        volume:
          type: integer
          nullable: true
        currentSong:
          type: string
          nullable: true
        previousSong:
          type: string
          nullable: true
        nextSong:
          type: string
          nullable: true
        playingStatus:
          type: string
          nullable: true
    OrderItem:
      type: object
      description: "Line item within an F&B order."
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          type: number
          format: double
        amount:
          type: number
          format: double
        currency:
          type: string
        price:
          type: number
          format: double
        instructions:
          type: string
          nullable: true
        modifiers:
          type: array
          description: "Applied modifier groups with selected options."
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              options:
                type: array
                items:
                  type: object
                  properties:
                    option_id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                      format: double
    OrderStatusEntry:
      type: object
      description: "Tracks the status progression of an order."
      properties:
        status:
          type: string
          description: "Status value such as pending, processing, on the way, delivered."
        timeStamp:
          type: string
          format: date-time
    Order:
      type: object
      description: "Food & beverage order."
      properties:
        id:
          type: integer
        orderId:
          type: string
          description: "External order identifier stored in Firestore."
        amount:
          type: string
          description: "Total amount (string to match legacy schema)."
        currency:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
        statusTrack:
          type: array
          items:
            $ref: "#/components/schemas/OrderStatusEntry"
        currentStatus:
          type: string
        deliveryDate:
          type: string
          format: date-time
          nullable: true
        paymentMethod:
          type: string
          nullable: true
        tableNo:
          type: string
          nullable: true
        sessionId:
          type: string
          nullable: true
        guestName:
          type: string
          nullable: true
        isGuestOrder:
          type: boolean
        propertyId:
          type: integer
        roomId:
          type: integer
        hubId:
          type: integer
          nullable: true
        domainId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        propertyDetail:
          description: "Property metadata when included by the service."
          type: object
        room:
          description: "Room metadata when included by the service."
          type: object
    OrderCreateRequest:
      type: object
      required:
        - propertyId
        - roomId
        - amount
        - currency
        - items
      properties:
        propertyId:
          type: integer
        roomId:
          type: integer
        hubId:
          type: integer
          nullable: true
        amount:
          type: string
          description: "Total string amount persisted in the legacy schema."
        currency:
          type: string
        instructions:
          type: string
          nullable: true
        comingFrom:
          type: string
          description: "Source of the order (e.g., promotions)."
        items:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - id
              - quantity
            properties:
              id:
                type: integer
              quantity:
                type: number
                format: double
              instructions:
                type: string
                nullable: true
              modifiers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    options:
                      type: array
                      items:
                        type: integer
    OrderUpdateRequest:
      type: object
      description: "Payload accepted by the order update endpoint."
      properties:
        currentStatus:
          type: string
          description: "New status value (pending, processing, on the way, delivered, etc.)."
        deliveryDate:
          type: string
          format: date-time
        posRefNum:
          type: string
          description: "POS reference number when order is routed to a POS vendor."
        checkNumber:
          type: string
        amount:
          type: string
        currency:
          type: string
    OrderSummary:
      type: object
      description: "Summary view returned by /summary."
      properties:
        pendingOrders:
          type: integer
        deliveredOrders:
          type: integer
        processingOrders:
          type: integer
        transitOrders:
          type: integer
        totalOrders:
          type: integer
        totalRevenue:
          type: number
          format: double
        todaysOrders:
          type: integer
        todaysRevenue:
          type: number
          format: double
    OrderStatsRequest:
      type: object
      description: "Optional filters applied to top/bottom ordered item reports."
      properties:
        propertyId:
          type: integer
        domainId:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    OrderedItemStats:
      type: object
      description: "Aggregated item statistics."
      properties:
        name:
          type: string
        count:
          type: integer
        quantity:
          type: number
          format: double
        currency:
          type: string
        revenue:
          type: number
          format: double
    OrderGraphRequest:
      type: object
      description: "Filter options for the orders graph endpoint."
      properties:
        propertyId:
          type: integer
        type:
          type: string
          enum:
            - lastWeek
            - lastMonth
          description: "Limit the aggregation to recent periods."
    OrderGraphResponse:
      type: object
      description: "Aggregate response returned by the orders graph endpoint."
      properties:
        dates:
          type: object
          additionalProperties:
            type: object
            properties:
              orders:
                type: integer
              revenue:
                type: number
                format: double
          description: "Map of date (DD-MM-YYYY) to order/revenue metrics."
        total_revenue:
          type: number
          format: double
        graph_revenue:
          type: number
          format: double
    OrderCloseEvent:
      type: object
      description: "Payload posted by Symphony POS to close an order."
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              event:
                type: string
              resource:
                type: object
                description: "Raw resource from the POS vendor."
              data:
                type: object
                properties:
                  status:
                    type: string
    Room:
      type: object
      description: "Represents a room within a property."
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        roomNo:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        hubId:
          type: integer
          nullable: true
        userId:
          type: integer
          nullable: true
        impalaID:
          type: string
          nullable: true
        impalaHotelID:
          type: string
          nullable: true
        customText:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RoomCreateRequest:
      type: object
      required:
        - name
        - type
        - roomNo
        - propertyId
      properties:
        name:
          type: string
        type:
          type: string
        roomNo:
          type: string
        propertyId:
          type: integer
        hubId:
          type: integer
          nullable: true
        userId:
          type: integer
          nullable: true
        impalaID:
          type: string
        impalaHotelID:
          type: string
        customText:
          type: string
          nullable: true
        hubOverWrite:
          type: boolean
          default: true
        metadata:
          type: string
          description: "JSON string representing metadata; parsed by the controller."
        image:
          type: string
          format: binary
          nullable: true
    RoomUpdateRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        roomNo:
          type: string
        impalaID:
          type: string
        impalaHotelID:
          type: string
        hubId:
          type: integer
        userId:
          type: integer
        customText:
          type: string
        metadata:
          type: string
          description: "JSON string representing metadata overrides."
        image:
          type: string
          format: binary
          nullable: true
    RoomBookingRequest:
      type: object
      required:
        - serviceId
        - date
        - time
        - count
      properties:
        serviceId:
          type: integer
        propertyId:
          type: integer
          nullable: true
        roomId:
          type: integer
          nullable: true
        hubId:
          type: integer
          nullable: true
        userId:
          type: integer
          nullable: true
        date:
          type: string
          example: "2024-02-01"
        time:
          type: string
          example: "15:00"
        count:
          type: integer
        notes:
          type: string
          nullable: true
    RoomBookingUpdateRequest:
      type: object
      properties:
        status:
          type: string
        date:
          type: string
        time:
          type: string
        count:
          type: integer
        notes:
          type: string
          nullable: true
    RoomBooking:
      type: object
      description: "Room-level booking record."
      properties:
        id:
          type: integer
        serviceId:
          type: integer
        propertyId:
          type: integer
        roomId:
          type: integer
        hubId:
          type: integer
        userId:
          type: integer
        date:
          type: string
        time:
          type: string
        count:
          type: integer
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RoomTransactionRequest:
      type: object
      description: "Transaction payload accepted from PMS integrations."
      properties:
        bookingId:
          type: string
        bookingStatus:
          type: string
        guestName:
          type: string
        roomId:
          type: integer
        roomNo:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        metadata:
          type: object
    RoomTransaction:
      type: object
      description: "Represents a check-in/out event stored for a room."
      properties:
        id:
          type: integer
        bookingId:
          type: string
        status:
          type: string
        guestName:
          type: string
        roomId:
          type: integer
        hotelId:
          type: integer
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RoomReservationEvent:
      type: object
      description: "Payload for manual check-in/check-out actions."
      required:
        - bookingId
      properties:
        bookingId:
          type: string
        hotelId:
          type: integer
        roomId:
          type: integer
        guestName:
          type: string
        status:
          type: string
        metadata:
          type: object
    RoomReconciliationRequest:
      type: object
      properties:
        hotelId:
          type: integer
        roomId:
          type: integer
    RoomGuest:
      type: object
      description: "Guest profile linked to a room."
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        roomId:
          type: integer
        bookingId:
          type: string
    RoomLoginRequest:
      type: object
      required:
        - propertyId
        - roomNo
        - hubId
      properties:
        propertyId:
          type: integer
        roomNo:
          type: string
        hubId:
          type: integer
    RoomLoginResponse:
      type: object
      description: "Response returned when a room device logs in."
      properties:
        sessionToken:
          type: string
        room:
          $ref: "#/components/schemas/Room"
        property:
          type: object
          description: "Property metadata used by in-room applications."
    XeniaTransactionRequest:
      type: object
      description: "Webhook payload sent from X3nia PMS."
      properties:
        booking_status:
          type: string
        room:
          type: object
          properties:
            room_id:
              type: string
        guest:
          type: object
        metadata:
          type: object
    PropertyService:
      type: object
      description: "Service offering configured for a property."
      properties:
        id:
          type: integer
        domainId:
          type: integer
        propertyId:
          type: integer
        name:
          type: string
        description:
          type: string
        location:
          type: string
        thumbnailUrl:
          type: string
          format: uri
        backgroundImageUrl:
          type: string
          format: uri
          nullable: true
        tabletBackgroundImageUrl:
          type: string
          format: uri
          nullable: true
        visible_on_qr:
          type: boolean
        timeSlot:
          type: integer
          description: "Slot duration in minutes."
        weekendTimeSlot:
          type: integer
        perSlotLimit:
          type: integer
        perBookingLimit:
          type: integer
        bookingLimit:
          type: integer
          description: "Maximum bookings per day (-1 means unlimited)."
        perUserBookingLimit:
          type: integer
        start_time:
          type: string
        end_time:
          type: string
        offset_after_time:
          type: string
          nullable: true
        offset_before_time:
          type: string
          nullable: true
        booking_dates_count:
          type: integer
        exceptions:
          type: array
          items:
            type: object
        emails:
          type: array
          items:
            type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PropertyServiceCreateRequest:
      type: object
      required:
        - name
        - description
        - location
        - propertyId
        - start_time
        - end_time
        - timeSlot
        - thumbnailImage
        - backgroundImage
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
        propertyId:
          type: integer
        start_time:
          type: string
          example: "09:00 AM"
        end_time:
          type: string
          example: "06:00 PM"
        timeSlot:
          type: integer
          description: "Slot duration in minutes."
        weekendTimeSlot:
          type: integer
        perSlotLimit:
          type: integer
          default: 1
        perBookingLimit:
          type: integer
          default: 1
        bookingLimit:
          type: integer
          default: -1
        perUserBookingLimit:
          type: integer
          default: 1
        visible_on_qr:
          type: boolean
          default: true
        booking_dates_count:
          type: integer
          default: 30
        exceptions:
          type: string
          description: "JSON string representing exception windows."
        emails:
          type: string
          description: "JSON string representing email notification rules."
        thumbnailImage:
          type: string
          format: binary
        backgroundImage:
          type: string
          format: binary
    PropertyServiceUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        timeSlot:
          type: integer
        weekendTimeSlot:
          type: integer
        perSlotLimit:
          type: integer
        perBookingLimit:
          type: integer
        bookingLimit:
          type: integer
        perUserBookingLimit:
          type: integer
        booking_dates_count:
          type: integer
        exceptions:
          type: string
          description: "JSON string representing exception windows."
        emails:
          type: string
          description: "JSON string representing email notification rules."
        thumbnailImage:
          type: string
          format: binary
        backgroundImage:
          type: string
          format: binary
    PropertyServiceSlot:
      type: object
      description: "Represents a single slot for a property service."
      properties:
        serviceId:
          type: integer
        date:
          type: string
          format: date
        startTime:
          type: string
        endTime:
          type: string
        available:
          type: boolean
        capacity:
          type: integer
        bookings:
          type: integer
        locale:
          type: string
    PropertyServiceBookingRequest:
      type: object
      required:
        - serviceId
        - date
        - time
        - count
      properties:
        serviceId:
          type: integer
        propertyId:
          type: integer
        hubId:
          type: integer
        roomId:
          type: integer
        userId:
          type: integer
        date:
          type: string
          example: "2024-01-31"
        time:
          type: string
          example: "15:00"
        count:
          type: integer
          description: "Number of guests for the booking."
    PropertyServiceBooking:
      type: object
      description: "Represents a booking for a property service."
      properties:
        id:
          type: integer
        serviceId:
          type: integer
        propertyId:
          type: integer
        roomId:
          type: integer
        hubId:
          type: integer
        userId:
          type: integer
        date:
          type: string
          format: date
        time:
          type: string
        count:
          type: integer
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FnbProduct:
      type: object
      description: "F&B menu item."
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: string
          description: "Price stored as a string for legacy compatibility."
        currency:
          type: string
        stock:
          type: integer
        sequence:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
        notifType:
          type: string
        notifUrl:
          type: string
          nullable: true
        notifHeaders:
          type: object
          additionalProperties: true
        notifBody:
          type: string
          nullable: true
        notifMethod:
          type: string
          nullable: true
        categoryId:
          type: integer
        subCategoryId:
          type: integer
          nullable: true
        propertyId:
          type: integer
        domainId:
          type: integer
        posItemId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FnbProductWithModifiers:
      allOf:
        - $ref: "#/components/schemas/FnbProduct"
        - type: object
          properties:
            modifiers:
              type: array
              items:
                $ref: "#/components/schemas/FnbModifier"
    FnbProductCreateRequest:
      type: object
      required:
        - name
        - description
        - price
        - currency
        - stock
        - categoryId
        - propertyId
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: string
        currency:
          type: string
        stock:
          type: integer
        categoryId:
          type: integer
        subCategoryId:
          type: integer
        propertyId:
          type: integer
        tags:
          type: array
          items:
            type: object
        images:
          type: array
          items:
            type: string
            format: uri
        notifType:
          type: string
        notifUrl:
          type: string
        notifHeaders:
          type: object
          additionalProperties: true
        notifBody:
          type: string
        notifMethod:
          type: string
        posItemId:
          type: string
    FnbProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: string
        currency:
          type: string
        stock:
          type: integer
        categoryId:
          type: integer
        subCategoryId:
          type: integer
        tags:
          type: array
          items:
            type: object
        images:
          type: array
          items:
            type: string
            format: uri
        sequence:
          type: integer
        notifType:
          type: string
        notifUrl:
          type: string
        notifHeaders:
          type: object
        notifBody:
          type: string
        notifMethod:
          type: string
        posItemId:
          type: string
    FnbModifierRequest:
      type: object
      required:
        - productId
        - propertyId
        - modifiers
      properties:
        productId:
          type: integer
        propertyId:
          type: integer
        domainId:
          type: integer
        modifiers:
          type: array
          items:
            $ref: "#/components/schemas/FnbModifier"
    FnbModifier:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        minSelection:
          type: integer
        maxSelection:
          type: integer
        isMandatory:
          type: boolean
        sequence:
          type: integer
        options:
          type: array
          items:
            $ref: "#/components/schemas/FnbModifierOption"
    FnbModifierOption:
      type: object
      properties:
        option_id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        defaultSelected:
          type: boolean
        sequence:
          type: integer
    Restaurant:
      type: object
      description: "Restaurant definition used for F&B operations."
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        sequence:
          type: integer
        imageUrl:
          type: string
          format: uri
        type:
          type: string
          description: "Fulfilment type (call, url, etc.)."
        phone_number:
          type: string
        url:
          type: string
          format: uri
        shopId:
          type: string
        shopSlug:
          type: string
        shopKey:
          type: string
        timings:
          type: array
          items:
            type: object
        propertyId:
          type: integer
        domainId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RestaurantCreateRequest:
      type: object
      required:
        - name
        - propertyId
      properties:
        name:
          type: string
        description:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        sequence:
          type: integer
        type:
          type: string
          default: "call"
        phone_number:
          type: string
        url:
          type: string
        shopId:
          type: string
        shopSlug:
          type: string
        shopKey:
          type: string
        timings:
          type: array
          items:
            type: object
    RestaurantUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        sequence:
          type: integer
        type:
          type: string
        phone_number:
          type: string
        url:
          type: string
        shopId:
          type: string
        shopSlug:
          type: string
        shopKey:
          type: string
        timings:
          type: array
          items:
            type: object
        propertyId:
          type: integer
        domainId:
          type: integer
    FnbGuestLoginRequest:
      type: object
      required:
        - sessionId
        - propertyId
        - domainId
      properties:
        sessionId:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        name:
          type: string
        tableNo:
          type: string
        deviceId:
          type: integer
          description: "Device identifier (if available)."
    FnbGuestLoginResponse:
      type: object
      properties:
        status:
          type: string
        sessionId:
          type: string
        sessionToken:
          type: string
        expiresIn:
          type: string
        refreshToken:
          type: string
        hotelId:
          type: integer
        domainId:
          type: integer
    FnbGuestOrderRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
              - quantity
            properties:
              id:
                type: integer
              quantity:
                type: number
              instructions:
                type: string
              modifiers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    options:
                      type: array
                      items:
                        type: string
        name:
          type: string
        lastName:
          type: string
        tableNo:
          type: string
        paymentMethod:
          type: string
        notes:
          type: string
        categoryId:
          type: integer
        subCategoryId:
          type: integer
        sessionId:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        roomId:
          type: integer
        hubId:
          type: integer
        deviceId:
          type: integer
        hotelId:
          type: integer
    FnbCategory:
      type: object
      description: "F&B category definition."
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        hasSubCategory:
          type: boolean
        sequence:
          type: integer
        gst:
          type: integer
        gstName:
          type: string
        convenience:
          type: integer
        convenienceName:
          type: string
        serviceTax:
          type: integer
        serviceTaxName:
          type: string
        images:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
        timings:
          type: array
          description: "Per-day availability windows."
          items:
            type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FnbCategoryCreateRequest:
      type: object
      required:
        - name
        - description
        - propertyId
      properties:
        name:
          type: string
        description:
          type: string
        propertyId:
          type: integer
        hasSubCategory:
          type: boolean
        sequence:
          type: integer
        gst:
          type: integer
        gstName:
          type: string
        convenience:
          type: integer
        convenienceName:
          type: string
        serviceTax:
          type: integer
        serviceTaxName:
          type: string
        timings:
          type: array
          items:
            type: object
        email:
          type: string
          format: email
          description: "Primary admin email to seed the configuration."
    FnbCategoryUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hasSubCategory:
          type: boolean
        sequence:
          type: integer
        gst:
          type: integer
        gstName:
          type: string
        convenience:
          type: integer
        convenienceName:
          type: string
        serviceTax:
          type: integer
        serviceTaxName:
          type: string
        timings:
          type: array
          items:
            type: object
        email:
          type: string
          format: email
    FnbSubCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        categoryId:
          type: integer
        propertyId:
          type: integer
        domainId:
          type: integer
        sequence:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
        timings:
          type: array
          items:
            type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FnbSubCategoryCreateRequest:
      type: object
      required:
        - name
        - description
        - categoryId
        - propertyId
      properties:
        name:
          type: string
        description:
          type: string
        categoryId:
          type: integer
        propertyId:
          type: integer
        sequence:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
        timings:
          type: array
          items:
            type: object
    FnbSubCategoryUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        sequence:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
        timings:
          type: array
          items:
            type: object
    FnbBanner:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        subtitle:
          type: string
        titleFontSize:
          type: integer
        subtitleFontSize:
          type: integer
        titleColor:
          type: string
        titleFont:
          type: string
        titleFontStyle:
          type: string
        subtitleColor:
          type: string
        subtitleFont:
          type: string
        subtitleFontStyle:
          type: string
        image:
          type: string
          format: uri
        type:
          type: string
        propertyId:
          type: integer
        domainId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    FnbBannerCreateRequest:
      type: object
      required:
        - image
        - title
        - subtitle
        - propertyId
      properties:
        title:
          type: string
        subtitle:
          type: string
        type:
          type: string
          enum: ["image", "video"]
        titleFontSize:
          type: integer
        subtitleFontSize:
          type: integer
        titleFont:
          type: string
        titleFontStyle:
          type: string
        titleColor:
          type: string
        subtitleFont:
          type: string
        subtitleFontStyle:
          type: string
        subtitleColor:
          type: string
        propertyId:
          type: integer
        image:
          type: string
          format: binary
    FnbBannerUpdateRequest:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        type:
          type: string
        titleFontSize:
          type: integer
        subtitleFontSize:
          type: integer
        titleFont:
          type: string
        titleFontStyle:
          type: string
        titleColor:
          type: string
        subtitleFont:
          type: string
        subtitleFontStyle:
          type: string
        subtitleColor:
          type: string
        propertyId:
          type: integer
        image:
          type: string
          format: binary
    FnbAdminConfigRequest:
      type: object
      required:
        - categoryId
        - propertyId
      properties:
        categoryId:
          type: integer
        propertyId:
          type: integer
        emails:
          type: array
          items:
            type: string
            format: email
        status:
          type: boolean
          description: "Whether email notifications are enabled."
    FnbLoginRequest:
      type: object
      required:
        - domainId
        - propertyId
        - roomNo
        - name
      properties:
        domainId:
          type: integer
        propertyId:
          type: integer
        roomNo:
          type: string
        name:
          type: string
